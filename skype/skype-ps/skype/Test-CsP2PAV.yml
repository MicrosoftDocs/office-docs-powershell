### YamlMime:PowershellCmdlet
summary: |-
  Tests the ability of a pair of users to conduct a peer-to-peer audio/video (A/V) call.
  This cmdlet was introduced in Lync Server 2010.
module: SkypeForBusiness
notes: ""
inputs:
- name: <xref href=" " data-throw-if-not-resolved="False" />
  description: |-
    None.
    The `Test-CsP2PAV` cmdlet does not accept pipelined input.
outputs:
- name: <xref href=" " data-throw-if-not-resolved="False" />
  description: |-
    The `Test-CsP2PAV` cmdlet returns an instance of the Microsoft.Rtc.SyntheticTransactions.TaskOutput object.
links:
- text: Test-CsAVConference
  href: Test-CsAVConference.yml
syntaxes:
- >-
  Test-CsP2PAV [-TargetFqdn] <String> [-ReceiverSipAddress <String>] [-RegistrarPort <Int32>]

   [-SenderSipAddress <String>] [-Force] [-Verbose] [-OutVerboseVariable <String>]

   [-Authentication <AuthenticationMechanism>] [-OutLoggerVariable <String>] [<CommonParameters>]
- >-
  Test-CsP2PAV [[-TargetFqdn] <String>] -ReceiverCredential <PSCredential> -ReceiverSipAddress <String>

   [-RegistrarPort <Int32>] -SenderCredential <PSCredential> -SenderSipAddress <String> [-Force] [-Verbose]

   [-OutVerboseVariable <String>] [-Authentication <AuthenticationMechanism>] [-OutLoggerVariable <String>]

   [<CommonParameters>]
examples:
- title: '-------------------------- Example 1 --------------------------'
  code: |-
    Test-CsP2PAV -TargetFqdn atl-cs-001.litwareinc.com
  description: |-
    Example 1 checks to see if a pair of preconfigured test users can log on to the pool atl-cs-001.litwareinc.com and then conduct a peer-to-peer audio/video call.
    This command will work only if test users have been defined for the pool atl-cs-001.litwareinc.com.
    If they have, then the command will determine whether the two users can log on to the system and, if so, can converse using an audio/video call.

    If test users have not been defined then the command will fail because it will not know which users to employ when doing the test.
    If you have not defined test users for a pool, then you must include the SenderSipAddress and ReceiverSipAddress parameters as well as the corresponding credentials for the users involved in the instant message exchange.
    The `Test-CsP2PAV` cmdlet will then conduct its checks using the two specified users.
  summary: ""
- title: '-------------------------- Example 2 --------------------------'
  code: |-
    $cred1 = Get-Credential "litwareinc\pilar"

    $cred2 = Get-Credential "litwareinc\kenmyer"

    Test-CsP2PAV -TargetFqdn atl-cs-001.litwareinc.com -SenderSipAddress "sip:pilar@litwareinc.com" -SenderCredential $cred1 -ReceiverSipAddress "sip:kenmyer@litwareinc.com" -ReceiverCredential $cred2
  description: |-
    The commands shown in Example 2 test the ability of a pair of users (litwareinc\pilar and litwareinc\kenmyer) to log on to Lync Server and then conduct a peer-to-peer audio/video call.
    To do this, the first command in the example uses the `Get-Credential` cmdlet to create a Windows PowerShell credential object containing the name and password of the user Pilar Ackerman.
    (Because the logon name, litwareinc\pilar, has been included as a parameter, the Windows PowerShell Credential Request dialog box only requires the administrator to enter the password for the Pilar Ackerman account.) The resulting credentials object is then stored in a variable named $cred1.
    The second command does the same thing, this time returning a credential object for the Ken Myer account.

    With the two credential objects in hand, the third command in the example determines whether or not the two users can log on to Lync Server and conduct a peer-to-peer audio/video call.
    To carry out this task, the `Test-CsP2PAV` cmdlet is called, along with the following parameters: TargetFqdn (the FQDN of the Registrar pool); SenderSipAddress (the SIP address for the first test user); SenderCredential (the Windows PowerShell object containing the credentials for this same user); ReceiverSipAddress (the SIP address for the other test user); and ReceiverCredential (the Windows PowerShell object containing the credentials for the other test user).
  summary: ""
parameters:
- type: <xref href="AuthenticationMechanism" data-throw-if-not-resolved="False" />
  name: Authentication
  description: |+
    Type of authentication used in the test.
    Allowed values are:

    TrustedServer

    Negotiate

    ClientCertificate

    LiveID


  defaultValue: None
  position: Named
  aliases: Ath
  applicable:
  - Lync Server 2013
  - Skype for Business Server 2015
  - Skype for Business Server 2019
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: Force
  description: |+
    Suppresses the display of any non-fatal error message that might occur when running the command.

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - Lync Server 2010
  - Lync Server 2013
  - Skype for Business Server 2015
  - Skype for Business Server 2019
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: OutLoggerVariable
  description: |+
    When present, detailed output from running the cmdlet will be stored in the specified variable.
    This variable includes a pair of methods - ToHTML and ToXML - that can then be used to save that output to either an HTML or an XML file.

    To store output in a logger variable named $TestOutput use the following syntax:

    `-OutLoggerVariable TestOutput`

    Note: Do not use prepend a $ character when specifying the variable name. To save the information stored in the logger variable to an HTML file, use a command similar to this:

    `$TestOutput.ToHTML() \> C:\Logs\TestOutput.html`

    To save the information stored in the logger variable to an XML file, use a command similar to this:

    `$TestOutput.ToXML() \> C:\Logs\TestOutput.xml`

  defaultValue: None
  position: Named
  aliases: olv
  applicable:
  - Lync Server 2013
  - Skype for Business Server 2015
  - Skype for Business Server 2019
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: OutVerboseVariable
  description: |+
    When present, detailed output from running the cmdlet will be stored in the specified variable.
    For example, to store output in a variable named $TestOutput use the following syntax:

    `-OutVerboseVariable TestOutput`

    Do not prepend a $ character when specifying the variable name.


  defaultValue: None
  position: Named
  aliases: ovv
  applicable:
  - Lync Server 2010
  - Lync Server 2013
  - Skype for Business Server 2015
  - Skype for Business Server 2019
  parameterValueGroup: ""
- type: <xref href="PSCredential" data-throw-if-not-resolved="False" />
  name: ReceiverCredential
  isRequired: true
  description: |+
    User credential object for the first of the two user accounts to be tested.
    The value passed to ReceiverCredential should be an object reference obtained by using the `Get-Credential` cmdlet.
    For example, this code returns a credentials object for the user litwareinc\pilar and stores that object in a variable named $y:

    `$y = Get-Credential "litwareinc\pilar"`

    You need to supply the user password when running this command.

    The receiver credential is not required if you are running the test under the health monitoring configuration settings for the pool.

  defaultValue: None
  position: Named
  aliases: rc
  applicable:
  - Lync Server 2010
  - Lync Server 2013
  - Skype for Business Server 2015
  - Skype for Business Server 2019
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: ReceiverSipAddress
  isRequired: true
  description: |+
    SIP address for the first of the two user accounts to be tested.
    For example:

    `-ReceiverSipAddress "sip:pilar@litwareinc.com"`

    The ReceiverSipAddress parameter must reference the same user account as ReceiverCredential.

    The SIP address is not required if you are running the test under the health monitoring configuration settings for the pool.


  defaultValue: None
  position: Named
  aliases: ra
  applicable:
  - Lync Server 2010
  - Lync Server 2013
  - Skype for Business Server 2015
  - Skype for Business Server 2019
  parameterValueGroup: ""
- type: <xref href="Int32" data-throw-if-not-resolved="False" />
  name: RegistrarPort
  description: |+
    SIP port used by the Registrar service.
    This parameter is not required if the Registrar uses the default port 5061.

  defaultValue: None
  position: Named
  aliases: rp
  applicable:
  - Lync Server 2010
  - Lync Server 2013
  - Skype for Business Server 2015
  - Skype for Business Server 2019
  parameterValueGroup: ""
- type: <xref href="PSCredential" data-throw-if-not-resolved="False" />
  name: SenderCredential
  isRequired: true
  description: |+
    User credential object for the second of the two user accounts to be tested.
    The value passed to SenderCredential should be an object reference obtained by using the `Get-Credential` cmdlet.
    For example, this code returns a credentials object for the user litwareinc\kenmyer and stores that object in a variable named $x:

    `$x = Get-Credential "litwareinc\kenmyer"`

    You need to supply the user password when running this command.

    The sender credential is not required if you are running the test under the health monitoring configuration settings for the pool.

  defaultValue: None
  position: Named
  aliases: sc
  applicable:
  - Lync Server 2010
  - Lync Server 2013
  - Skype for Business Server 2015
  - Skype for Business Server 2019
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: SenderSipAddress
  isRequired: true
  description: |+
    SIP address for the second of the two user accounts to be tested.
    For example:

    `-SenderSipAddress "sip:kenmyer@litwareinc.com"`

    The SenderSipAddress parameter must reference the same user account as SenderCredential.

    The SIP address is not required if you are running the test under the health monitoring configuration settings for the pool.


  defaultValue: None
  position: Named
  aliases: sa
  applicable:
  - Lync Server 2010
  - Lync Server 2013
  - Skype for Business Server 2015
  - Skype for Business Server 2019
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: TargetFqdn
  isRequired: true
  description: |+
    Fully qualified domain name (FQDN) of the pool to be tested.

  defaultValue: None
  position: "2"
  aliases: t
  applicable:
  - Lync Server 2010
  - Lync Server 2013
  - Skype for Business Server 2015
  - Skype for Business Server 2019
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: Verbose
  description: |+
    Reports detailed activity to the screen as the cmdlet runs.

  defaultValue: None
  position: Named
  aliases: vb
  applicable:
  - Lync Server 2010
  parameterValueGroup: ""
applicable:
- Lync Server 2010
- Lync Server 2013
- Skype for Business Server 2015
- Skype for Business Server 2019
uid: SkypeForBusiness.Test-CsP2PAV
name: Test-CsP2PAV
description: |-
  The `Test-CsP2PAV` cmdlet is an example of a Skype for Business Server "synthetic transaction." Synthetic transactions are used in Skype for Business Server to verify that users are able to successfully complete common tasks such as logging on to the system, exchanging instant messages, or making calls to a phone located on the public switched telephone network (PSTN).
  These tests can be conducted manually by an administrator, or they can be automatically run by an application such as Microsoft System Center Operations Manager (formerly Microsoft Operations Manager).

  Synthetic transactions are typically conducted in two different ways.
  Many administrators will use the `CsHealthMonitoringConfiguration` cmdlets to set up test users for each of their Registrar pools.
  These test users are a pair of users who have been preconfigured for use with synthetic transactions.
  (Typically these are test accounts and not accounts that belong to actual users.) With test users configured for a pool, administrators can simply run a synthetic transaction against that pool without having to specify the identities of (and supply the credentials for) the user accounts involved in the test.

  Alternatively, administrators can run a synthetic transaction using actual user accounts.
  For example, if two users are unable to exchange instant messages, an administrator could run a synthetic transaction using the two user accounts in question (as opposed to a pair of test accounts) and try to diagnose and resolve the problem.
  If you decide to conduct a synthetic transaction using actual user accounts you will need to supply the logon names and passwords for each user.

  The `Test-CsP2PAV` cmdlet is used to determine whether two test users are able to participate in a peer-to-peer audio/video (A/V) conversation.
  To test this scenario, the cmdlet starts off by logging the two users on to Lync Server.
  Assuming that the two logons succeed, the first user then invites the second user to join an A/V call.
  The second user accepts the call, the connection between the two users is tested, and then the call is ended and the test users are logged off from the system.

  The `Test-CsP2PAV` cmdlet does not actually conduct an A/V call; multimedia information is not exchanged between the test users.
  Instead, the cmdlet simply verifies that the appropriate connections can be made and that the two users are capable of conducting such a call.
metadata:
  external help file: Microsoft.Rtc.Management.dll-help.xml
  online version: https://learn.microsoft.com/powershell/module/skype/test-csp2pav
  applicable: Lync Server 2010, Lync Server 2013, Skype for Business Server 2015, Skype for Business Server 2019
  title: Test-CsP2PAV
  schema: 2.0.0
  manager: rogupta
  author: hirenshah1
  ms.author: hirshah
  ms.reviewer: ""
