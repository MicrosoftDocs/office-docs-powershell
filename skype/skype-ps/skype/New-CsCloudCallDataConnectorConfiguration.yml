### YamlMime:PowershellCmdlet
summary: |-
  Creates a new set of Cloud Call Data Connector configuration settings.
module: SkypeForBusiness
notes: ""
inputs:
- name: <xref href="None" data-throw-if-not-resolved="False" />
  description: ""
outputs:
- name: <xref href="Creates instances of the Microsoft.Rtc.Management.WritableConfig.Settings.CallDataConnectorConfiguration object." data-throw-if-not-resolved="False" />
  description: ""
syntaxes:
- >-
  New-CsCloudCallDataConnectorConfiguration [-EnableCallDataConnector <Boolean>] [-Identity] <XdsIdentity>

   [-InMemory] [-Force] [-WhatIf] [-Confirm] [<CommonParameters>]
examples:
- title: Example 1
  code: |-
    PS C:\> New-CsCloudCallDataConnectorConfiguration -Identity site:Redmond -EnableCallDataConnector $True
  description: |-
    The command in Example 1 uses the New-CsCloudCallDataConnectorConfiguration cmdlet to create a new set of Cloud Call Data Connector configuration settings with the Identity site:Redmond. In addition to the Identity site:Redmond, the new settings also have the EnableCallDataConnector property set to True. Because site settings take precedence over global settings, this means that Call Data Connector will be used in the Redmond site, regardless of whether Call Data Connector has been enabled at the global scope.
  summary: ""
- title: EXAMPLE 2
  code: |-
    $x = New-CsCloudCallDataConnectorConfiguration -Identity site:Redmond -InMemory

    $x.EnableCallDataConnector = $False

    Set-CsCloudCallDataConnectorConfiguration -Instance $x
  description: |-
    Example 2 uses the InMemory parameter to demonstrate how you can create a new collection of Cloud Call Data Connector configuration settings that initially exist only in memory.
    To do this, the example first uses the New-CsCloudCallDataConnectorConfiguration cmdlet and the InMemory parameter to create a virtual collection of settings with the Identity site:Redmond.
    This virtual collection is stored in the variable $x; if the collection was not stored in a variable, it would be created and then immediately disappear.

    After the virtual collection has been created, the command shown in line 2 sets the value of the EnableCallDataConnector property to False ($False).
    In line 3, the Set-CsCdrConfiguration cmdlet is then used to transform the virtual collection $x into an actual collection of Cloud Call Data Connector configuration settings that is applied to the Redmond site.
    If the Set-CsCloudCallDataConnectorConfiguration cmdlet was not called, the virtual collection would disappear as soon as the Windows PowerShell session was terminated or the variable $x was deleted.
  summary: ""
parameters:
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: Confirm
  description: |+
    Prompts you for confirmation before running the cmdlet.

  defaultValue: None
  position: Named
  aliases: cf
  applicable:
  - Skype for Business Server 2019
  parameterValueGroup: ""
- type: <xref href="Boolean" data-throw-if-not-resolved="False" />
  name: EnableCallDataConnector
  description: |+
    Enables upload of call data (CDR and QoE).

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - Skype for Business Server 2019
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: Force
  description: |+
    Suppresses the display of any non-fatal error message that might occur when running the command.

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - Skype for Business Server 2019
  parameterValueGroup: ""
- type: <xref href="XdsIdentity" data-throw-if-not-resolved="False" />
  name: Identity
  isRequired: true
  description: |+
    Represents the unique identifier to be assigned to the new collection of CloudCallDataConnector configuration settings. Because you can only create new collections at the site scope, the Identity will always be the prefix "site:" followed by the site name; for example, "site:Redmond".

  defaultValue: None
  position: "1"
  aliases: ""
  applicable:
  - Skype for Business Server 2019
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: InMemory
  description: |+
    Creates an object reference without actually committing the object as a permanent change. If you assign the output of this cmdlet called with this parameter to a variable, you can make changes to the properties of the object reference and then commit those changes by calling this cmdlet's matching Set-\<cmdlet\>.

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - Skype for Business Server 2019
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: WhatIf
  description: |+
    Shows what would happen if the cmdlet runs.
    The cmdlet is not run.

  defaultValue: None
  position: Named
  aliases: wi
  applicable:
  - Skype for Business Server 2019
  parameterValueGroup: ""
applicable:
- Skype for Business Server 2019
uid: SkypeForBusiness.New-CsCloudCallDataConnectorConfiguration
name: New-CsCloudCallDataConnectorConfiguration
description: |-
  Call Data Connector greatly simplifies call monitoring in a hybrid environment because you no longer need to use different sets of on-premises and online tools to monitor all of your users' call quality. Whether your users are homed on premises or online, you can choose to view call quality for your entire organization online.

  With Call Data Connector, the Skype for Business Server pushes call data to the cloud service so that you can leverage the Skype for Business Online Call Analytics (CA) and Call Quality Dashboard (CQD) tools.
metadata:
  external help file: Microsoft.Rtc.Management.dll-Help.xml
  online version: https://learn.microsoft.com/powershell/module/skype/new-cscloudcalldataconnectorconfiguration
  applicable: Skype for Business Server 2019
  title: New-CsCloudCallDataConnectorConfiguration
  schema: 2.0.0
  manager: rogupta
  author: hirenshah1
  ms.author: hirshah
  ms.reviewer: ""
