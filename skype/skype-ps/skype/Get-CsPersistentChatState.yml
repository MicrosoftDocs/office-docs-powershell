### YamlMime:PowershellCmdlet
summary: |-
  Returns the state of one or more Persistent Chat service pools.
  Persistent Chat pools can be in one of two states: Normal, in which the pool uses its primary databases; or FailedOver, in which the pool uses the backup databases defined in the topology.
  This cmdlet was introduced in Lync Server 2013.
module: SkypeForBusiness
notes: ""
inputs:
- name: <xref href="None" data-throw-if-not-resolved="False" />
  description: ""
outputs:
- name: <xref href="Microsoft.Rtc.Management.WritableConfig.Settings.PersistentChat.PersistentChatState" data-throw-if-not-resolved="False" />
  description: ""
links:
- text: Set-CsPersistentChatState
  href: Set-CsPersistentChatState.yml
syntaxes:
- Get-CsPersistentChatState [-Filter <String>] [-LocalStore] [<CommonParameters>]
- Get-CsPersistentChatState [[-Identity] <XdsIdentity>] [-LocalStore] [<CommonParameters>]
examples:
- title: '-------------------------- Example 1 --------------------------'
  code: |-
    Get-CsPersistentChatState
  description: |-
    The command shown in Example 1 returns the state of all the Persistent Chat servers configured for use in the organization.
  summary: ""
- title: '-------------------------- Example 2 --------------------------'
  code: |-
    Get-CsPersistentChatState -Identity "PersistentChatServer:atl-gc-001.litwareinc.com"
  description: |-
    {Enter description for Example 2}
  summary: ""
- title: '-------------------------- Example 3 --------------------------'
  code: |-
    Get-CsPersistentChatState -Filter "*.litwareinc.com"
  description: |-
    Example 3 returns state information for all Persistent Chat servers in the domain litwareinc.com.
    To do this, the Filter parameter is included along with the filter value "*.litwareinc.com".
    That filter value causes the Get-CsPersistentChatState cmdlet to return information for all the Persistent Chat servers that have an Identity that ends with the string value ".litwareinc.com".
  summary: ""
- title: '-------------------------- Example 4 --------------------------'
  code: |-
    Get-CsPersistentChatState | Where-Object {$_.PoolState -eq "FailedOver"}
  description: |-
    The command shown in Example 4 returns state information for all the Persistent Chat servers that are currently failed over.
    To carry out this task, the command first calls the Get-CsPersistentChatState cmdlet without any parameters; that returns a collection of all the Persistent Chat servers in the organization.
    That collection is then piped to the Where-Object cmdlet, which picks out only those servers where the PoolState property is equal to (-eq) "FailedOver".
  summary: ""
parameters:
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: Filter
  description: |+
    Enables you to use wildcards when retrieving one or more Persistent Chat states.
    For example, to return all the Persistent Chat states for the domain litwareinc.com, use this syntax:

    `-Filter "*.litwareinc.com"`

    You cannot use both the Filter parameter and the Identity parameter in the same command.

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - Lync Server 2013
  - Skype for Business Server 2015
  parameterValueGroup: ""
- type: <xref href="XdsIdentity" data-throw-if-not-resolved="False" />
  name: Identity
  description: |+
    Unique identifier for the Persistent Chat pool.
    For example:

    `-Identity "PersistentChatServer:atl-gc-001.litwareinc.com"`

    If this parameter is omitted then the Get-CsPersistentChatState cmdlet returns information for all your Persistent Chat states.

  defaultValue: None
  position: "2"
  aliases: ""
  applicable:
  - Lync Server 2013
  - Skype for Business Server 2015
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: LocalStore
  description: |+
    Retrieves the Persistent Chat state data from the local replica of the Central Management store rather than from the Central Management store itself.

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - Lync Server 2013
  - Skype for Business Server 2015
  parameterValueGroup: ""
applicable:
- Lync Server 2013
- Skype for Business Server 2015
uid: SkypeForBusiness.Get-CsPersistentChatState
name: Get-CsPersistentChatState
description: |-
  The Get-CsPersistentChatState cmdlet returns the state of one or more Persistent Chat pools.
  Persistent Chat pools can be in either the Normal state (in which the pool uses its primary databases) or in a FailedOver state, in which the pool uses its backup databases.
  You can use the Set-CsPersistentChatState cmdlet to change the state of a Persistent Chat pool; when you change the state of the pool, Skype for Business Server 2015 will automatically change the state of each individual server in the pool.

  The functions carried out by the Get-CsPersistentChatState cmdlet are not available in the Skype for Business Server Control Panel.
metadata:
  external help file: Microsoft.Rtc.Management.dll-help.xml
  online version: https://learn.microsoft.com/powershell/module/skype/get-cspersistentchatstate
  applicable: Lync Server 2013, Skype for Business Server 2015
  title: Get-CsPersistentChatState
  schema: 2.0.0
  manager: rogupta
  author: hirenshah1
  ms.author: hirshah
  ms.reviewer: ""
