### YamlMime:PowershellCmdlet
summary: |-
  The `Start-CsWindowsService` cmdlet enables you to start a Skype for Business Server service.
  This cmdlet was introduced in Lync Server 2010.
module: SkypeForBusiness
notes: ""
inputs:
- name: <xref href=" " data-throw-if-not-resolved="False" />
  description: |-
    Microsoft.Rtc.Management.Deployment.Core.NTService object.
    The `Start-CsWindowsService` cmdlet accepts pipelined instances of the Windows service object.
outputs:
- name: <xref href=" " data-throw-if-not-resolved="False" />
  description: |-
    None.
    Instead, the `Start-CsWindowsService` cmdlet starts instances of the Microsoft.Rtc.Management.Deployment.Core.NTService object.
links:
- text: Get-CsWindowsService
  href: Get-CsWindowsService.yml
- text: Stop-CsWindowsService
  href: Stop-CsWindowsService.yml
syntaxes:
- >-
  Start-CsWindowsService [[-Name] <String>] [-ComputerName <String>] [-NoWait] [-Force] [-Report <String>]

   [-WhatIf] [-Confirm] [<CommonParameters>]
- >-
  Start-CsWindowsService [-InputObject <NTService>] [-NoWait] [-Force] [-Report <String>] [-WhatIf] [-Confirm]

   [<CommonParameters>]
examples:
- title: '-------------------------- Example 1 ------------------------'
  code: |-
    Start-CsWindowsService
  description: |-
    The command shown in Example 1 starts all the Skype for Business Server services on the local computer.
    This is done by calling the `Start-CsWindowsService` cmdlet without any parameters.
    Note that you will not receive an error if you try to start a service that has already been started.
  summary: ""
- title: '-------------------------- Example 2 ------------------------'
  code: |-
    Start-CsWindowsService -Name "RTCRGS"
  description: |-
    Example 2 starts the Response Group application service on the local computer.
    To do this, the command uses the Name parameter followed by the service name: RTCRGS.
  summary: ""
- title: '-------------------------- Example 3 ------------------------'
  code: |-
    Start-CsWindowsService -Name "RTCRGS" -ComputerName atl-cs-001.litwareinc.com
  description: |-
    The command shown in Example 3 also starts the Response Group application service; in this case, however, the service is started on the remote computer atl-cs-001.litwareinc.com.
    To start a service on a remote computer, include the ComputerName parameter followed by the FQDN of the remote computer.
  summary: ""
- title: '-------------------------- Example 4 ------------------------'
  code: |-
    Get-CsWindowsService | Where-Object {$_.Status -ne "Running"} | Start-CsWindowsService
  description: |-
    In Example 4, the command searches the local computer for all the Skype for Business Server services that are not currently running, then starts each of these inactive services.
    To do this, the command first calls the `Get-CsWindowsService` cmdlet to return a collection of all the Skype for Business Server services.
    This collection is then piped to the `Where-Object` cmdlet, which selects only those services where the Status property is not equal to Running.
    This filtered collection is then piped to the `Start-CsWindowsService` cmdlet, which starts each service in the collection.
  summary: ""
parameters:
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: ComputerName
  description: |+
    Name of the remote computer hosting the service to be started; if this parameter is not included, then the `Start-CsWindowsService` cmdlet will start the specified service (or services) on the local computer.
    The remote computer should be referenced using its FQDN; for example, atl-cs-001.litwareinc.com.


  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - Lync Server 2010
  - Lync Server 2013
  - Skype for Business Server 2015
  - Skype for Business Server 2019
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: Confirm
  description: |+
    Prompts you for confirmation before executing the command.

  defaultValue: None
  position: Named
  aliases: cf
  applicable:
  - Lync Server 2010
  - Lync Server 2013
  - Skype for Business Server 2015
  - Skype for Business Server 2019
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: Force
  description: |+
    Suppresses the display of any non-fatal error message that might occur when running the command.

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - Lync Server 2010
  - Lync Server 2013
  - Skype for Business Server 2015
  - Skype for Business Server 2019
  parameterValueGroup: ""
- type: <xref href="NTService" data-throw-if-not-resolved="False" />
  name: InputObject
  description: |+
    Enables you to start a service using an object reference rather than a service name.
    For example, if you use the `Get-CsWindowsService` cmdlet to return information about a service, and if you store the returned object in a variable named $x, you can then start the service using this command:

    `$x = Get-CsWindowsService -Name "RTCCPS"`

    `Start-CsWindowsService -InputObject $x.Name`


  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  applicable:
  - Lync Server 2010
  - Lync Server 2013
  - Skype for Business Server 2015
  - Skype for Business Server 2019
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: Name
  description: |+
    Name of the Skype for Business Server service you want to start.
    Note that you must use the service name (for example, RTCCAA) and not the service display name.
    You can only pass a single service name to the Name parameter, and you cannot use wildcards in the service name.
    Service names can be retrieved using the `Get-CsWindowsService` cmdlet.

    Keep in mind that the `Start-CsWindowsService` cmdlet can only start Skype for Business Server services; you cannot use this cmdlet to start other Windows services.
    For those services, you might be able to use the Windows PowerShell `Start-Service` cmdlet.


  defaultValue: None
  position: "2"
  aliases: ""
  applicable:
  - Lync Server 2010
  - Lync Server 2013
  - Skype for Business Server 2015
  - Skype for Business Server 2019
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: NoWait
  description: |+
    When present, causes the command to run and then immediately return control to the Windows PowerShell prompt.
    If not present, control will not be returned until the command has completed and a status report has been written to the screen.

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - Lync Server 2010
  - Lync Server 2013
  - Skype for Business Server 2015
  - Skype for Business Server 2019
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: Report
  description: |+
    Path to an HTML file where error information can be stored.
    If this parameter is included, any errors that occur during the running of this cmdlet will be logged to the specified file (for example, C:\Logs\Service_report.html).

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - Lync Server 2010
  - Lync Server 2013
  - Skype for Business Server 2015
  - Skype for Business Server 2019
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: WhatIf
  description: |+
    Describes what would happen if you executed the command without actually executing the command.

  defaultValue: None
  position: Named
  aliases: wi
  applicable:
  - Lync Server 2010
  - Lync Server 2013
  - Skype for Business Server 2015
  - Skype for Business Server 2019
  parameterValueGroup: ""
applicable:
- Lync Server 2010
- Lync Server 2013
- Skype for Business Server 2015
- Skype for Business Server 2019
uid: SkypeForBusiness.Start-CsWindowsService
name: Start-CsWindowsService
description: |-
  Many Skype for Business Server components run as standard Windows services; for example, the Conferencing Attendant application is actually a service named RTCCAA.
  If one of your Skype for Business Server services is currently stopped, you can restart that service by using the `Start-CsWindowsService` cmdlet.

  Note, however, that the `Start-CsWindowsService` cmdlet can only start Skype for Business Server services; an error will occur if you attempt to start a non-Skype for Business Server service (such as the print spooler) using this cmdlet.

  Functionally, the `Start-CsWindowsService` cmdlet is very similar to the generic Windows PowerShell Start-Service cmdlet; if you wanted to, you could use the `Start-Service` cmdlet to start a Skype for Business Server service.
  On the other hand, the `Start-CsWindowsService` cmdlet includes a ComputerName parameter that makes it easy to start a service on a remote computer: you simply include the ComputerName parameter followed by the fully qualified domain name (FQDN) of the remote computer.
  The `Start-Service` cmdlet does not have a comparable parameter.
  In addition, the cmdlet's Report parameter enables you to keep a log of any errors that might occur when calling `Start-CsWindowsService`.

  Like other Windows services, some Skype for Business Server services have a dependency on another service; for example, the Skype for Business Server Conferencing Attendant service cannot run unless the Application service is already running.
  If you try to start a service that depends on another service, the `Start-CsWindowsService` cmdlet will start both of those services.
  That means that, if you try to start the Conferencing Attendant service, the cmdlet will first start the Application service and then start the Conferencing Attendant service.
  However, the `Start-CsWindowsService` cmdlet will not automatically start any dependent services of a service: if you start the Application service, the command will not automatically start the Conferencing Attendant service as well.
metadata:
  external help file: Microsoft.Rtc.Management.dll-help.xml
  online version: https://learn.microsoft.com/powershell/module/skype/start-cswindowsservice
  applicable: Lync Server 2010, Lync Server 2013, Skype for Business Server 2015, Skype for Business Server 2019
  title: Start-CsWindowsService
  schema: 2.0.0
  manager: rogupta
  author: hirenshah1
  ms.author: hirshah
  ms.reviewer: ""
