### YamlMime:PowershellCmdlet
summary: |-
  Converts an object to a JSON-formatted string for PowerShell Web Services.
module: SkypeForBusiness
notes: ""
inputs:
- name: <xref href="System.Object" data-throw-if-not-resolved="False" />
  description: |-
    You can pipe any object to ConvertTo-JsonForPSWS.
outputs:
- name: <xref href="System.String" data-throw-if-not-resolved="False" />
  description: ""
links:
- text: ConvertTo-Json
  href: https://learn.microsoft.com/powershell/module/microsoft.powershell.utility/convertto-json?view=powershell-6
syntaxes:
- ConvertTo-JsonForPSWS [-InputObject] <Object> [-Depth <Int>] [-Compress] [<CommonParameters>]
examples:
- title: '-------------------------- Example 1 --------------------------'
  code: |-
    PS C:\> (Get-UICulture).Calendar | ConvertTo-JsonForPSWS
    {
        "MinSupportedDateTime":  "\/Date(-62135568000000)\/",
        "MaxSupportedDateTime":  "\/Date(253402300799999)\/",
        "AlgorithmType":  "SolarCalendar",
        "CalendarType":  "Localized",
        "Eras":  [
                     1
                 ],
        "TwoDigitYearMax":  2029,
        "IsReadOnly":  false
    }
  description: |-
    This command uses the `ConvertTo-JsonForPSWS` cmdlet to convert a GregorianCalendar object to a JSON-formatted string for PowerShell Web Services.
  summary: ""
- title: '-------------------------- Example 2 --------------------------'
  code: |-
    PS C:\> @{Account="User01";Domain="Domain01";Admin="True"} | ConvertTo-JsonForPSWS -Compress
    {"Admin":"True","Account":"User01","Domain":"Domain01"}
  description: |-
    This command shows the effect of using the Compress parameter of `ConvertTo-JsonForPSWS`. The compression affects only the appearance of the string, not its validity.
  summary: ""
- title: '-------------------------- Example 3 --------------------------'
  code: |-
    PS C:\> Get-Date | Select-Object -Property * | ConvertTo-JsonForPSWS
    {
        "DisplayHint":  {
                            "value":  2,
                            "Value":  "DateTime"
                        },
        "DateTime":  "domingo, 27 de mayo de 2018 19:01:15",
        "Date":  "\/Date(1527390000000)\/",
        "Day":  27,
        "DayOfWeek":  {
                          "value":  0,
                          "Value":  "Sunday"
                      },
        "DayOfYear":  147,
        "Hour":  19,
        "Kind":  {
                     "value":  2,
                     "Value":  "Local"
                 },
        "Millisecond":  225,
        "Minute":  1,
        "Month":  5,
        "Second":  15,
        "Ticks":  636630444752251610,
        "TimeOfDay":  {
                          "Hours":  19,
                          "Minutes":  1,
                          "Seconds":  15,
                          "Ticks":  684752251610,
                          "Days":  0,
                          "Milliseconds":  225,
                          "TotalDays":  0.79253732825231482,
                          "TotalHours":  19.020895878055555,
                          "TotalMilliseconds":  68475225.161,
                          "TotalMinutes":  1141.2537526833335,
                          "TotalSeconds":  68475.225161
                      },
        "Year":  2018
    }
  description: |-
    This command shows how to use the `ConvertTo-JsonForPSWS` cmdlet to convert an object to a JSON string for PowerShell Web Services.

    It uses the `ConvertTo-JsonForPSWS` cmdlet to convert a System.DateTime object from the Get-Date cmdlet to a JSON-formatted string for PowerShell Web Services. The command uses the Select-Object cmdlet to get all () of the properties of the **DateTime* object. The output shows the JSON string that `ConvertTo-JsonForPSWS` returned.
  summary: ""
- title: '-------------------------- Example 4 --------------------------'
  code: |-
    PS C:\> $JsonSecurityHelp = Get-Content $Pshome\Modules\Microsoft.PowerShell.Security\en-US\Microsoft.PowerShell.Security.dll-Help.xml | ConvertTo-JsonForPSWS
  description: |-
    This command uses the `ConvertTo-JsonForPSWS` cmdlet to convert a Windows PowerShell Help file from XML format to JSON format for PowerShell Web Services.
  summary: ""
parameters:
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: Compress
  description: |+
    Omits white space and indented formatting in the output string.

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - Skype for Business Online
  parameterValueGroup: ""
- type: <xref href="Int" data-throw-if-not-resolved="False" />
  name: Depth
  description: |+
    Specifies how many levels of contained objects are included in the JSON representation. The default value is 2.

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - Skype for Business Online
  parameterValueGroup: ""
- type: <xref href="Object" data-throw-if-not-resolved="False" />
  name: InputObject
  description: |+
    Specifies the objects to convert to JSON format. Enter a variable that contains the objects, or type a command or expression that gets the objects. You can also pipe an object to `ConvertTo-JsonForPSWS`.

    The InputObject parameter is required, but its value can be null ($Null) or an empty string. When the input object is $Null, `ConvertTo-JsonForPSWS` does not generate any output. When the input object is an empty string, `ConvertTo-JsonForPSWS` returns an empty string.

  defaultValue: None
  position: "0"
  aliases: ""
  applicable:
  - Skype for Business Online
  parameterValueGroup: ""
applicable:
- Skype for Business Online
uid: SkypeForBusiness.ConvertTo-JsonForPSWS
name: ConvertTo-JsonForPSWS
description: |-
  The `ConvertTo-JsonForPSWS` cmdlet converts any object to a string in JavaScript Object Notation (JSON) format for PowerShell Web Services. The properties are converted to field names, the property values are converted to field values, and the methods are removed.

  You can then use the `ConvertTo-JsonForPSWS` cmdlet to convert a JSON-formatted string to a JSON object, which is easily managed in Windows PowerShell.
metadata:
  external help file: Microsoft.Rtc.Management.Hosted.dll-help.xml
  online version: https://learn.microsoft.com/powershell/module/skype/convertto-jsonforpsws
  applicable: Skype for Business Online
  title: ConvertTo-JsonForPSWS
  schema: 2.0.0
  manager: bulenteg
  author: tomkau
  ms.author: tomkau
  ms.reviewer: williamlooney
