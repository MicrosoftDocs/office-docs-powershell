### YamlMime:PowershellCmdlet
summary: |-
  This cmdlet is available only in on-premises Exchange.

  Use the Get-ExchangeSettings cmdlet to view customized Exchange setting objects that are stored in Active Directory. Use the New-ExchangeSettings to create the settings object, and the Set-ExchangeSettings cmdlet to define the actual settings.

  For information about the parameter sets in the Syntax section below, see [Exchange cmdlet syntax](https://learn.microsoft.com/powershell/exchange/exchange-cmdlet-syntax).
module: ExchangePowerShell
notes: ""
syntaxes:
- >-
  Get-ExchangeSettings [[-Identity] <ExchangeSettingsIdParameter>]

   [-ConfigName <String>]

   [-Database <DatabaseIdParameter>]

   [-Diagnostic]

   [-DiagnosticArgument <String>]

   [-DomainController <Fqdn>]

   [-Force]

   [-GenericScopeName <String>]

   [-GenericScopes <String[]>]

   [-GenericScopeValue <String>]

   [-Organization <OrganizationIdParameter>]

   [-Process <String>]

   [-Server <ServerIdParameter>]

   [-User <Guid>]

   [<CommonParameters>]
examples:
- title: Example 1
  code: |-
    Get-ExchangeSettings
  description: |-
    This example returns a summary list of all Exchange setting objects.
  summary: ""
- title: Example 2
  code: |-
    Get-ExchangeSettings -Identity Audit | Format-List
  description: |-
    This example returns a summary list of all Exchange setting objects.
  summary: ""
parameters:
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: ConfigName
  description: |+
    The ConfigName parameter filter the results by the specified property name. The value you specify is visible in the EffectiveSetting property.

    The available values are determined by the schema of the Exchange setting object.

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - Exchange Server 2016
  - Exchange Server 2019
  parameterValueGroup: ""
- type: <xref href="DatabaseIdParameter" data-throw-if-not-resolved="False" />
  name: Database
  description: |+
    The Database parameter filters the results by mailbox database. You can use any value that uniquely identifies the database. For example:

    - Name
    - Distinguished name (DN)
    - ExchangeLegacyDN
    - GUID

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - Exchange Server 2016
  - Exchange Server 2019
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: Diagnostic
  description: |+
    The Diagnostic switch specifies whether to return extremely detailed information in the results. You don't need to specify a value with this switch.

    The detailed information is visible in the DiagnosticInfo property.

    Typically, you use this switch only at the request of Microsoft Customer Service and Support to troubleshoot problems.

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - Exchange Server 2016
  - Exchange Server 2019
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: DiagnosticArgument
  description: |+
    The DiagnosticArgument parameter modifies the results that are returned by using the Diagnostic switch. Typically, you use the Diagnostic switch and the DiagnosticArgument parameter only at the request of Microsoft Customer Service and Support to troubleshoot problems.

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - Exchange Server 2016
  - Exchange Server 2019
  parameterValueGroup: ""
- type: <xref href="Fqdn" data-throw-if-not-resolved="False" />
  name: DomainController
  description: |+
    The DomainController parameter specifies the domain controller that's used by this cmdlet to read data from or write data to Active Directory. You identify the domain controller by its fully qualified domain name (FQDN). For example, dc01.contoso.com.

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - Exchange Server 2016
  - Exchange Server 2019
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: Force
  description: |+
    The Force switch hides warning or confirmation messages. You don't need to specify a value with this switch.

    You can use this switch to run tasks programmatically where prompting for administrative input is inappropriate.

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - Exchange Server 2016
  - Exchange Server 2019
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: GenericScopeName
  description: |+
    The GenericScopeName parameter filters the results by the scope. The available values are determined by the schema of the Exchange setting object.

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - Exchange Server 2016
  - Exchange Server 2019
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: GenericScopes
  description: |+
    The GenericScopes parameter filters the results by the scope. The available values are determined by the schema of the Exchange setting object. This parameter uses the syntax `"key1=value1","key2=value2", "keyN=valueN`.

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - Exchange Server 2016
  - Exchange Server 2019
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: GenericScopeValue
  description: |+
    The GenericScopeValue parameter filters the results by the value of the scope specified by the GenericScopeName parameter. The available values are determined by the schema of the Exchange setting object.

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - Exchange Server 2016
  - Exchange Server 2019
  parameterValueGroup: ""
- type: <xref href="ExchangeSettingsIdParameter" data-throw-if-not-resolved="False" />
  name: Identity
  description: |+
    The Identity parameter specifies the name of the Exchange setting object. You can use any value that uniquely identifies the object. For example:

    - Name
    - Distinguished name (DN)
    - GUID

  defaultValue: None
  pipelineInput: true
  position: "1"
  aliases: ""
  applicable:
  - Exchange Server 2016
  - Exchange Server 2019
  parameterValueGroup: ""
- type: <xref href="OrganizationIdParameter" data-throw-if-not-resolved="False" />
  name: Organization
  description: |+
    This parameter is reserved for internal Microsoft use.

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - Exchange Server 2016
  - Exchange Server 2019
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: Process
  description: |+
    The Process parameter filters the results by the specified process. The available values are determined by the schema of the Exchange setting object.

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - Exchange Server 2016
  - Exchange Server 2019
  parameterValueGroup: ""
- type: <xref href="ServerIdParameter" data-throw-if-not-resolved="False" />
  name: Server
  description: |+
    The Server parameter filters the results by Exchange server. You can use any value that uniquely identifies the server. For example:

    - Name
    - Distinguished name (DN)
    - ExchangeLegacyDN
    - GUID

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - Exchange Server 2016
  - Exchange Server 2019
  parameterValueGroup: ""
- type: <xref href="Guid" data-throw-if-not-resolved="False" />
  name: User
  description: |+
    The User parameter filters the results by user. You identify the user by their GUID value (for example, 87246450-1b19-4c81-93dc-1a4200eff66c). To find the GUID for a user, run the following command: `Get-User <UserIdentity> | Format-List Name,GUID`.

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - Exchange Server 2016
  - Exchange Server 2019
  parameterValueGroup: ""
applicable:
- Exchange Server 2016
- Exchange Server 2019
uid: ExchangePowerShell.Get-ExchangeSettings
name: Get-ExchangeSettings
description: |-
  You need to be assigned permissions before you can run this cmdlet. Although this topic lists all parameters for the cmdlet, you may not have access to some parameters if they're not included in the permissions assigned to you. To find the permissions required to run any cmdlet or parameter in your organization, see [Find the permissions required to run any Exchange cmdlet](https://learn.microsoft.com/powershell/exchange/find-exchange-cmdlet-permissions).
metadata:
  external help file: Microsoft.Exchange.ServerStatus-Help.xml
  online version: https://learn.microsoft.com/powershell/module/exchange/get-exchangesettings
  applicable: Exchange Server 2016, Exchange Server 2019
  title: Get-ExchangeSettings
  schema: 2.0.0
  author: chrisda
  ms.author: chrisda
  ms.reviewer: ""
