### YamlMime:PowershellCmdlet
summary: |-
  This cmdlet is available in on-premises Exchange and in the cloud-based service. Some parameters and settings may be exclusive to one environment or the other.

  Use the Test-OAuthConnectivity cmdlet to test OAuth authentication to partner applications for a user.

  For information about the parameter sets in the Syntax section below, see [Exchange cmdlet syntax](https://learn.microsoft.com/powershell/exchange/exchange-cmdlet-syntax).
module: ExchangePowerShell
notes: ""
inputs:
- name: <xref href="Input types" data-throw-if-not-resolved="False" />
  description: |-
    To see the input types that this cmdlet accepts, see [Cmdlet Input and Output Types](https://go.microsoft.com/fwlink/p/?linkId=616387). If the Input Type field for a cmdlet is blank, the cmdlet doesn't accept input data.
outputs:
- name: <xref href="Output types" data-throw-if-not-resolved="False" />
  description: |-
    To see the return types, which are also known as output types, that this cmdlet accepts, see [Cmdlet Input and Output Types](https://go.microsoft.com/fwlink/p/?linkId=616387). If the Output Type field is blank, the cmdlet doesn't return data.
syntaxes:
- >-
  Test-OAuthConnectivity -Service <ModServiceType> -TargetUri <Uri>

   [-AppOnly]

   [-Confirm]

   [-Mailbox <MailboxIdParameter>]

   [-ReloadConfig]

   [-UseCachedToken]

   [-WhatIf]

   [<CommonParameters>]
examples:
- title: Example 1
  code: |-
    Test-OAuthConnectivity -Service EWS -TargetUri https://cas.contoso.com/ews/ -Mailbox "Gurinder Singh"
  description: |-
    This example tests OAuth connectivity with Exchange for Gurinder Singh.
  summary: ""
parameters:
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: AppOnly
  description: |+
    The AppOnly switch specifies the cmdlet will authenticate to the specified service as Exchange without any user context. You don't need to specify a value with this switch.

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - Exchange Server 2013
  - Exchange Server 2016
  - Exchange Server 2019
  - Exchange Online
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: Confirm
  description: |+
    The Confirm switch specifies whether to show or hide the confirmation prompt. How this switch affects the cmdlet depends on if the cmdlet requires confirmation before proceeding.

    - Destructive cmdlets (for example, Remove-\* cmdlets) have a built-in pause that forces you to acknowledge the command before proceeding. For these cmdlets, you can skip the confirmation prompt by using this exact syntax: `-Confirm:$false`.
    - Most other cmdlets (for example, New-\* and Set-\* cmdlets) don't have a built-in pause. For these cmdlets, specifying the Confirm switch without a value introduces a pause that forces you acknowledge the command before proceeding.

  defaultValue: None
  position: Named
  aliases: cf
  applicable:
  - Exchange Server 2013
  - Exchange Server 2016
  - Exchange Server 2019
  - Exchange Online
  parameterValueGroup: ""
- type: <xref href="MailboxIdParameter" data-throw-if-not-resolved="False" />
  name: Mailbox
  description: |+
    The Mailbox parameter specifies the mailbox for which you want to test OAuth connectivity to the specified partner application. You can use any value that uniquely identifies the mailbox. For example:

    - Name
    - Alias
    - Distinguished name (DN)
    - Canonical DN
    - Domain\\Username
    - Email address
    - GUID
    - LegacyExchangeDN
    - SamAccountName
    - User ID or user principal name (UPN)

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - Exchange Server 2013
  - Exchange Server 2016
  - Exchange Server 2019
  - Exchange Online
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: ReloadConfig
  description: |+
    The ReloadConfig switch reloads all the configuration settings from the Exchange configuration objects. You don't need to specify a value with this switch.

    If you don't use this switch, the cached configuration settings are used.

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - Exchange Server 2013
  - Exchange Server 2016
  - Exchange Server 2019
  - Exchange Online
  parameterValueGroup: ""
- type: <xref href="ModServiceType" data-throw-if-not-resolved="False" />
  name: Service
  isRequired: true
  description: |+
    The Service parameter specifies the partner application. Valid values for this parameter are:

    - EWS
    - AutoD
    - Generic

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - Exchange Server 2013
  - Exchange Server 2016
  - Exchange Server 2019
  - Exchange Online
  parameterValueGroup: ""
- type: <xref href="Uri" data-throw-if-not-resolved="False" />
  name: TargetUri
  isRequired: true
  description: |+
    The TargetUri parameter specifies the URL for the service you want to test OAuth connectivity with.

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - Exchange Server 2013
  - Exchange Server 2016
  - Exchange Server 2019
  - Exchange Online
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: UseCachedToken
  description: |+
    The UseCachedToken switch specifies that OAuth will try to use an existing, cached authorization token. You don't need to specify a value with this switch.

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - Exchange Server 2013
  - Exchange Server 2016
  - Exchange Server 2019
  - Exchange Online
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: WhatIf
  description: |+
    The WhatIf switch simulates the actions of the command. You can use this switch to view the changes that would occur without actually applying those changes. You don't need to specify a value with this switch.

  defaultValue: None
  position: Named
  aliases: wi
  applicable:
  - Exchange Server 2013
  - Exchange Server 2016
  - Exchange Server 2019
  - Exchange Online
  parameterValueGroup: ""
applicable:
- Exchange Server 2013
- Exchange Server 2016
- Exchange Server 2019
- Exchange Online
uid: ExchangePowerShell.Test-OAuthConnectivity
name: Test-OAuthConnectivity
description: |-
  SharePoint, Lync and Skype for Business partner applications are automatically created in on-premises Exchange deployments. For the Test-OAuthConnectivity cmdlet to succeed for other partner applications in on-premises deployments, you first need to create the partner application by using the Configure-EnterprisePartnerApplication.ps1 script that's available in the %ExchangeInstallPath%Scripts folder ($env:ExchangeInstallPath\Scripts in PowerShell).

  You need to be assigned permissions before you can run this cmdlet. Although this topic lists all parameters for the cmdlet, you may not have access to some parameters if they're not included in the permissions assigned to you. To find the permissions required to run any cmdlet or parameter in your organization, see [Find the permissions required to run any Exchange cmdlet](https://learn.microsoft.com/powershell/exchange/find-exchange-cmdlet-permissions).
metadata:
  external help file: Microsoft.Exchange.RemoteConnections-Help.xml
  online version: https://learn.microsoft.com/powershell/module/exchange/test-oauthconnectivity
  applicable: Exchange Server 2013, Exchange Server 2016, Exchange Server 2019, Exchange Online
  title: Test-OAuthConnectivity
  schema: 2.0.0
  author: chrisda
  ms.author: chrisda
  ms.reviewer: ""
