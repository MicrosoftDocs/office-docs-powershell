### YamlMime:PowershellCmdlet
summary: |-
  This cmdlet is available only in Exchange Server 2010.

  Use the Set-ManagedContentSettings cmdlet to modify existing managed content settings for a managed folder.

  For information about the parameter sets in the Syntax section below, see [Exchange cmdlet syntax](https://learn.microsoft.com/powershell/exchange/exchange-cmdlet-syntax).
module: ExchangePowerShell
notes: ""
inputs:
- name: <xref href="Input types" data-throw-if-not-resolved="False" />
  description: |-
    To see the input types that this cmdlet accepts, see [Cmdlet Input and Output Types](https://go.microsoft.com/fwlink/p/?LinkId=2081749). If the Input Type field for a cmdlet is blank, the cmdlet doesn't accept input data.
outputs:
- name: <xref href="Output types" data-throw-if-not-resolved="False" />
  description: |-
    To see the return types, which are also known as output types, that this cmdlet accepts, see [Cmdlet Input and Output Types](https://go.microsoft.com/fwlink/p/?LinkId=2081749). If the Output Type field is blank, the cmdlet doesn't return data.
syntaxes:
- >-
  Set-ManagedContentSettings [-Identity] <ELCContentSettingsIdParameter>

   [-AddressForJournaling <RecipientIdParameter>]

   [-AgeLimitForRetention <EnhancedTimeSpan>]

   [-Confirm]

   [-DomainController <Fqdn>]

   [-JournalingEnabled <Boolean>]

   [-LabelForJournaling <String>]

   [-MessageFormatForJournaling <JournalingFormat>]

   [-MoveToDestinationFolder <ELCFolderIdParameter>]

   [-Name <String>]

   [-RetentionAction <RetentionAction>]

   [-RetentionEnabled <Boolean>]

   [-TriggerForRetention <RetentionDateType>]

   [-WhatIf]

   [<CommonParameters>]
examples:
- title: Example 1
  code: |-
    Set-ManagedContentSettings -Identity MyManagedContentSettings -AddressForJournaling MySmtpAddress@contoso.com
  description: |-
    This example specifies the address of the journaling recipient that's the destination of journaling operations.
  summary: ""
parameters:
- type: <xref href="RecipientIdParameter" data-throw-if-not-resolved="False" />
  name: AddressForJournaling
  description: |+
    The AddressForJournaling parameter specifies the journaling recipient where journaled messages are sent. You can use any value that uniquely identifies the recipient. For example:

    - Name
    - Alias
    - Distinguished name (DN)
    - Canonical DN
    - Email address
    - GUID

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - Exchange Server 2010
  parameterValueGroup: ""
- type: <xref href="EnhancedTimeSpan" data-throw-if-not-resolved="False" />
  name: AgeLimitForRetention
  description: |+
    The AgeLimitForRetention parameter specifies the age at which retention is enforced on an item. The age limit corresponds to the number of days from the date that the item was delivered or the date that an item was created if it wasn't delivered.

    If this parameter isn't present and the RetentionEnabled parameter is set to $true, an error is returned.

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - Exchange Server 2010
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: Confirm
  description: |+
    The Confirm switch specifies whether to show or hide the confirmation prompt. How this switch affects the cmdlet depends on if the cmdlet requires confirmation before proceeding.

    - Destructive cmdlets (for example, Remove-\* cmdlets) have a built-in pause that forces you to acknowledge the command before proceeding. For these cmdlets, you can skip the confirmation prompt by using this exact syntax: `-Confirm:$false`.
    - Most other cmdlets (for example, New-\* and Set-\* cmdlets) don't have a built-in pause. For these cmdlets, specifying the Confirm switch without a value introduces a pause that forces you acknowledge the command before proceeding.

  defaultValue: None
  position: Named
  aliases: cf
  applicable:
  - Exchange Server 2010
  parameterValueGroup: ""
- type: <xref href="Fqdn" data-throw-if-not-resolved="False" />
  name: DomainController
  description: |+
    The DomainController parameter specifies the domain controller that's used by this cmdlet to read data from or write data to Active Directory. You identify the domain controller by its fully qualified domain name (FQDN). For example, dc01.contoso.com.

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - Exchange Server 2010
  parameterValueGroup: ""
- type: <xref href="ELCContentSettingsIdParameter" data-throw-if-not-resolved="False" />
  name: Identity
  isRequired: true
  description: |+
    The Identity parameter specifies the name, distinguished name (DN), or GUID of the managed content settings.

  defaultValue: None
  pipelineInput: true
  position: "1"
  aliases: ""
  applicable:
  - Exchange Server 2010
  parameterValueGroup: ""
- type: <xref href="Boolean" data-throw-if-not-resolved="False" />
  name: JournalingEnabled
  description: |+
    The JournalingEnabled parameter specifies that journaling is enabled when it's set to $true.

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - Exchange Server 2010
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: LabelForJournaling
  description: |+
    The LabelForJournaling parameter specifies a label that's attached to an item. This label is used by the destination store to determine the content of the item and enforce the appropriate policy.

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - Exchange Server 2010
  parameterValueGroup: ""
- type: <xref href="JournalingFormat" data-throw-if-not-resolved="False" />
  name: MessageFormatForJournaling
  description: |+
    The MessageFormatForJournaling parameter specifies the format in which an item should be journaled in. You can use the following values:

    - UseMsg Microsoft Outlook .MSG format
    - UseTnef Outlook MAPI format

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - Exchange Server 2010
  parameterValueGroup: ""
- type: <xref href="ELCFolderIdParameter" data-throw-if-not-resolved="False" />
  name: MoveToDestinationFolder
  description: |+
    The MoveToDestinationFolder parameter specifies the name of the destination folder for a retention action.

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - Exchange Server 2010
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: Name
  description: |+
    The Name parameter specifies a unique name for the managed content settings.

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - Exchange Server 2010
  parameterValueGroup: ""
- type: <xref href="RetentionAction" data-throw-if-not-resolved="False" />
  name: RetentionAction
  description: |+
    The RetentionAction parameter specifies one of the following actions to take when an item reaches its retention age limit, specified by the AgeLimitForRetention parameter. The following retention actions can be used:

    - Mark as past retention limit
    - Move to a managed custom folder
    - Move to the Deleted Items folder
    - Delete and allow recovery
    - Permanently delete

    If this parameter isn't present and the RetentionEnabled parameter is set to $true, an error is returned.

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - Exchange Server 2010
  parameterValueGroup: ""
- type: <xref href="Boolean" data-throw-if-not-resolved="False" />
  name: RetentionEnabled
  description: |+
    The RetentionEnabled parameter specifies that retention is enabled when it's set to $true.

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - Exchange Server 2010
  parameterValueGroup: ""
- type: <xref href="RetentionDateType" data-throw-if-not-resolved="False" />
  name: TriggerForRetention
  description: |+
    The TriggerForRetention parameter specifies the date that's considered as the start date of the retention period. An item can reach its retention limit a specific number of days after the item was delivered or after it was moved into a specific folder.

    Valid values include:

    - WhenDelivered The item expires based on when it was delivered.
    - WhenMoved The item expires based on the date it was moved.

    If this parameter isn't present and the RetentionEnabled parameter is set to $true, an error is returned.

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - Exchange Server 2010
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: WhatIf
  description: |+
    The WhatIf switch simulates the actions of the command. You can use this switch to view the changes that would occur without actually applying those changes. You don't need to specify a value with this switch.

  defaultValue: None
  position: Named
  aliases: wi
  applicable:
  - Exchange Server 2010
  parameterValueGroup: ""
applicable:
- Exchange Server 2010
uid: ExchangePowerShell.Set-ManagedContentSettings
name: Set-ManagedContentSettings
description: |-
  Managed content settings are settings that you apply to managed folders to control the lifespan of items in users' mailboxes. For more information about managed content settings, see [Messaging Records Management](https://learn.microsoft.com/previous-versions/office/exchange-server-2010/bb123507(v=exchg.141)).

  Although the New-ManagedContentSettings cmdlet has the MessageClass parameter, the Set-ManagedContentSettings cmdlet doesn't. If you want to change the message type to which content settings apply, you must delete and then re-create the content settings. For more information about the MessageClass parameter, see [New-ManagedContentSettings](https://learn.microsoft.com/powershell/module/exchange/new-managedcontentsettings).

  You need to be assigned permissions before you can run this cmdlet. Although this topic lists all parameters for the cmdlet, you may not have access to some parameters if they're not included in the permissions assigned to you. To find the permissions required to run any cmdlet or parameter in your organization, see [Find the permissions required to run any Exchange cmdlet](https://learn.microsoft.com/powershell/exchange/find-exchange-cmdlet-permissions).
metadata:
  external help file: Microsoft.Exchange.RecordsandEdge-Help.xml
  online version: https://learn.microsoft.com/powershell/module/exchange/set-managedcontentsettings
  applicable: Exchange Server 2010
  title: Set-ManagedContentSettings
  schema: 2.0.0
  author: chrisda
  ms.author: chrisda
  ms.reviewer: ""
