### YamlMime:PowershellCmdlet
summary: |-
  This cmdlet is available only in on-premises Exchange.

  Use the Test-PopConnectivity cmdlet to verify that the Microsoft Exchange POP3 service is working as expected.

  **Note**: This cmdlet works best in Exchange 2010. In later versions of Exchange, the functionality of this cmdlet has been replaced by Managed Availability. For the best results, use the Invoke-MonitoringProbe cmdlet and specify the relevant active monitor probe instead of using this cmdlet.

  For information about the parameter sets in the Syntax section below, see [Exchange cmdlet syntax](https://learn.microsoft.com/powershell/exchange/exchange-cmdlet-syntax).
module: ExchangePowerShell
notes: ""
inputs:
- name: <xref href="Input types" data-throw-if-not-resolved="False" />
  description: |-
    To see the input types that this cmdlet accepts, see [Cmdlet Input and Output Types](https://go.microsoft.com/fwlink/p/?LinkId=616387). If the Input Type field for a cmdlet is blank, the cmdlet doesn't accept input data.
outputs:
- name: <xref href="Output types" data-throw-if-not-resolved="False" />
  description: |-
    To see the return types, which are also known as output types, that this cmdlet accepts, see [Cmdlet Input and Output Types](https://go.microsoft.com/fwlink/p/?LinkId=616387). If the Output Type field is blank, the cmdlet doesn't return data.
syntaxes:
- >-
  Test-PopConnectivity [[-ClientAccessServer] <ServerIdParameter>]

   [-Confirm]

   [-ConnectionType <ProtocolConnectionType>]

   [-DomainController <Fqdn>]

   [-LightMode]

   [-MailboxCredential <PSCredential>]

   [-MailboxServer <ServerIdParameter>]

   [-MonitoringContext]

   [-PerConnectionTimeout <Int32>]

   [-PortClientAccessServer <Int32>]

   [-ResetTestAccountCredentials]

   [-Timeout <UInt32>]

   [-TrustAnySSLCertificate]

   [-WhatIf]

   [<CommonParameters>]
examples:
- title: Example 1
  code: |-
    Test-PopConnectivity -ClientAccessServer Contoso12 -MailboxCredential (Get-Credential contoso\kweku)
  description: |-
    This example tests the client POP3 connectivity for the server named Contoso12 by using the credentials for the user contoso\\kweku.
  summary: ""
- title: Example 2
  code: |-
    Test-PopConnectivity -ClientAccessServer Contoso12
  description: |-
    This example tests the client POP3 connectivity of the specific server named Contoso12 and tests all Exchange mailboxes.
  summary: ""
parameters:
- type: <xref href="ServerIdParameter" data-throw-if-not-resolved="False" />
  name: ClientAccessServer
  description: |+
    The ClientAccessServer parameter specifies the Exchange server to test. This server has the Client Access server role installed and is responsible for accepting client connections.

    You can use any value that uniquely identifies the server. For example:

    - Name
    - Distinguished name (DN)
    - ExchangeLegacyDN
    - GUID

  defaultValue: None
  pipelineInput: true
  position: "1"
  aliases: ""
  applicable:
  - Exchange Server 2010
  - Exchange Server 2013
  - Exchange Server 2016
  - Exchange Server 2019
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: Confirm
  description: |+
    The Confirm switch specifies whether to show or hide the confirmation prompt. How this switch affects the cmdlet depends on if the cmdlet requires confirmation before proceeding.

    - Destructive cmdlets (for example, Remove-\* cmdlets) have a built-in pause that forces you to acknowledge the command before proceeding. For these cmdlets, you can skip the confirmation prompt by using this exact syntax: `-Confirm:$false`.
    - Most other cmdlets (for example, New-\* and Set-\* cmdlets) don't have a built-in pause. For these cmdlets, specifying the Confirm switch without a value introduces a pause that forces you acknowledge the command before proceeding.

  defaultValue: None
  position: Named
  aliases: cf
  applicable:
  - Exchange Server 2010
  - Exchange Server 2013
  - Exchange Server 2016
  - Exchange Server 2019
  parameterValueGroup: ""
- type: <xref href="ProtocolConnectionType" data-throw-if-not-resolved="False" />
  name: ConnectionType
  description: |+
    The ConnectionType parameter specifies the type of connection that's used to connect to the POP3 service. Valid values are:

    - Plaintext
    - Ssl
    - Tls

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - Exchange Server 2010
  - Exchange Server 2013
  - Exchange Server 2016
  - Exchange Server 2019
  parameterValueGroup: ""
- type: <xref href="Fqdn" data-throw-if-not-resolved="False" />
  name: DomainController
  description: |+
    The DomainController parameter specifies the domain controller that's used by this cmdlet to read data from or write data to Active Directory. You identify the domain controller by its fully qualified domain name (FQDN). For example, dc01.contoso.com.

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - Exchange Server 2010
  - Exchange Server 2013
  - Exchange Server 2016
  - Exchange Server 2019
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: LightMode
  description: |+
    The LightMode switch tells the command to perform only a test logon to the server by using the POP3 protocol. You don't need to specify a value with this switch.

    If you don't use this switch, the command also tests receiving a message using the POP3 protocol.

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - Exchange Server 2010
  - Exchange Server 2013
  - Exchange Server 2016
  - Exchange Server 2019
  parameterValueGroup: ""
- type: <xref href="PSCredential" data-throw-if-not-resolved="False" />
  name: MailboxCredential
  description: |+
    The MailboxCredential parameter specifies the mailbox credential to use for a single mailbox test.

    A value for this parameter requires the Get-Credential cmdlet. To pause this command and receive a prompt for credentials, use the value `(Get-Credential)`. Or, before you run this command, store the credentials in a variable (for example, `$cred = Get-Credential`) and then use the variable name (`$cred`) for this parameter. For more information, see [Get-Credential](https://learn.microsoft.com/powershell/module/microsoft.powershell.security/get-credential).

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - Exchange Server 2010
  - Exchange Server 2013
  - Exchange Server 2016
  - Exchange Server 2019
  parameterValueGroup: ""
- type: <xref href="ServerIdParameter" data-throw-if-not-resolved="False" />
  name: MailboxServer
  description: |+
    The MailboxServer parameter specifies the Exchange Mailbox server that you want to test. This parameter identifies the backend server that accepts proxied connections from the frontend server where clients connect.

    You can use any value that uniquely identifies the server. For example:

    - Name
    - Distinguished name (DN)
    - ExchangeLegacyDN
    - GUID

    If you don't use this parameter, connections to all Mailbox servers in the local Active Directory site are tested.

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - Exchange Server 2010
  - Exchange Server 2013
  - Exchange Server 2016
  - Exchange Server 2019
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: MonitoringContext
  description: |+
    The MonitoringContext switch includes the associated monitoring events and performance counters in the results. You don't need to specify a value with this switch.

    Typically, you include the monitoring events and performance counters in the results when the output is passed to Microsoft System Center Operations Manager (SCOM).

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - Exchange Server 2010
  - Exchange Server 2013
  - Exchange Server 2016
  - Exchange Server 2019
  parameterValueGroup: ""
- type: <xref href="Int32" data-throw-if-not-resolved="False" />
  name: PerConnectionTimeout
  description: |+
    The PerConnectionTimeout parameter specifies the amount of time, in seconds, to wait per connection for the test operation to finish. Valid values are between 0 and 120 seconds. The default value is 120 seconds.

    We recommend that you configure this parameter with a value of 5 seconds or more.

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - Exchange Server 2010
  - Exchange Server 2013
  - Exchange Server 2016
  - Exchange Server 2019
  parameterValueGroup: ""
- type: <xref href="Int32" data-throw-if-not-resolved="False" />
  name: PortClientAccessServer
  description: |+
    The PortClientAccessServer parameter specifies the port to use to connect to the Client Access server. The default port is 110 for POP3. The valid range is from 0 through 65,535.

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - Exchange Server 2010
  - Exchange Server 2013
  - Exchange Server 2016
  - Exchange Server 2019
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: ResetTestAccountCredentials
  description: |+
    The ResetTestAccountCredentials switch resets the password for the test account that's used to run this command. You don't need to specify a value with this switch.

    The password for the test account is typically reset every seven days. Use this switch to force a password reset any time it's required for security reasons.

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - Exchange Server 2010
  - Exchange Server 2013
  - Exchange Server 2016
  - Exchange Server 2019
  parameterValueGroup: ""
- type: <xref href="UInt32" data-throw-if-not-resolved="False" />
  name: Timeout
  description: |+
    The Timeout parameter specifies the amount of time, in seconds, to wait for the test operation to finish. Valid values are between 0 and 3600 seconds (1 hour). The default value is 180 seconds (3 minutes).

    We recommend that you configure this parameter with a value of 5 seconds or more.

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - Exchange Server 2010
  - Exchange Server 2013
  - Exchange Server 2016
  - Exchange Server 2019
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: TrustAnySSLCertificate
  description: |+
    The TrustAnySSLCertificate switch allows Exchange to accept certificates from untrusted certification authorities (CAs). You don't need to specify a value with this switch.

    This switch is useful for testing internal URLs, because a URL that has an associated certificate is typically an external URL. This switch lets the task check an internal URL without generating an error when the certificate doesn't match the URL.

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - Exchange Server 2010
  - Exchange Server 2013
  - Exchange Server 2016
  - Exchange Server 2019
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: WhatIf
  description: |+
    The WhatIf switch simulates the actions of the command. You can use this switch to view the changes that would occur without actually applying those changes. You don't need to specify a value with this switch.

  defaultValue: None
  position: Named
  aliases: wi
  applicable:
  - Exchange Server 2010
  - Exchange Server 2013
  - Exchange Server 2016
  - Exchange Server 2019
  parameterValueGroup: ""
applicable:
- Exchange Server 2010
- Exchange Server 2013
- Exchange Server 2016
- Exchange Server 2019
uid: ExchangePowerShell.Test-PopConnectivity
name: Test-PopConnectivity
description: |-
  The Test-PopConnectivity cmdlet tests POP3 connectivity by connecting to a specified mailbox, a specified Exchange server, or all Exchange servers that are available in the local Active Directory site.

  The first time you use this cmdlet, you might be required to create a test user. To create a test user, run the following command:

  & $env:ExchangeInstallPath\Scripts\New-TestCasConnectivityUser.ps1

  The test results are displayed on-screen. The cmdlet returns the following information.

  - CasServer: The Exchange server that the client connected to.
  - LocalSite: The name of the local Active Directory site.
  - Scenario: The operations that are tested. Test POP3 Connectivity connects to the server using the POP3 protocol, searches for the test message, and deletes the test message.
  - Result: The values returned are typically Success, Skipped or Failure.
  - Latency(MS): The time required to complete the test in milliseconds.
  - Error: Any error messages that were encountered.

  You can write the results to a file by piping the output to ConvertTo-Html and Set-Content. For example: `Test-PopConnectivity -ClientAccessServer MBX01 | ConvertTo-Html | Set-Content -Path "C:\My Documents\POP Test.html"`.

  You need to be assigned permissions before you can run this cmdlet. Although this topic lists all parameters for the cmdlet, you may not have access to some parameters if they're not included in the permissions assigned to you. To find the permissions required to run any cmdlet or parameter in your organization, see [Find the permissions required to run any Exchange cmdlet](https://learn.microsoft.com/powershell/exchange/find-exchange-cmdlet-permissions).
metadata:
  external help file: Microsoft.Exchange.RemoteConnections-Help.xml
  online version: https://learn.microsoft.com/powershell/module/exchange/test-popconnectivity
  applicable: Exchange Server 2010, Exchange Server 2013, Exchange Server 2016, Exchange Server 2019
  title: Test-PopConnectivity
  schema: 2.0.0
  author: chrisda
  ms.author: chrisda
  ms.reviewer: ""
