### YamlMime:PowershellCmdlet
summary: |-
  This cmdlet is available only in the cloud-based service.

  Use the New-AvailabilityConfig cmdlet to create the availability configuration that specifies the Microsoft 365 organizations to exchange free/busy information with.

  For information about the parameter sets in the Syntax section below, see [Exchange cmdlet syntax](https://learn.microsoft.com/powershell/exchange/exchange-cmdlet-syntax).
module: ExchangePowerShell
notes: ""
inputs:
- name: <xref href="Input types" data-throw-if-not-resolved="False" />
  description: |-
    To see the input types that this cmdlet accepts, see [Cmdlet Input and Output Types](https://go.microsoft.com/fwlink/p/?linkId=616387). If the Input Type field for a cmdlet is blank, the cmdlet doesn't accept input data.
outputs:
- name: <xref href="Output types" data-throw-if-not-resolved="False" />
  description: |-
    To see the return types, which are also known as output types, that this cmdlet accepts, see [Cmdlet Input and Output Types](https://go.microsoft.com/fwlink/p/?linkId=616387). If the Output Type field is blank, the cmdlet doesn't return data.
syntaxes:
- >-
  New-AvailabilityConfig 

   [-AllowedTenantIds <MultiValuedProperty>]

   [-Confirm]

   [-OrgWideAccount <SecurityPrincipalIdParameter>]

   [-WhatIf]

   [<CommonParameters>]
examples:
- title: Example 1
  code: |-
    New-AvailabilityConfig -AllowedTenantIds "d6b0a40e-029b-43f2-9852-f3724f68ead9","87d5bade-cefc-4067-a221-794aea71922d"
  description: |-
    This example creates a new availability configuration to share free/busy information with the specified Microsoft 365 organizations.
  summary: ""
parameters:
- type: <xref href="MultiValuedProperty" data-throw-if-not-resolved="False" />
  name: AllowedTenantIds
  description: |+
    The AllowedTenantIds parameter specifies the tenant ID values of Microsoft 365 organization that you want to share free/busy information with (for example, d6b0a40e-029b-43f2-9852-f3724f68ead9). You can specify multiple values separated by commas. A maximum of 25 values are allowed.

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - Exchange Online
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: Confirm
  description: |+
    The Confirm switch specifies whether to show or hide the confirmation prompt. How this switch affects the cmdlet depends on if the cmdlet requires confirmation before proceeding.

    - Destructive cmdlets (for example, Remove-\* cmdlets) have a built-in pause that forces you to acknowledge the command before proceeding. For these cmdlets, you can skip the confirmation prompt by using this exact syntax: `-Confirm:$false`.
    - Most other cmdlets (for example, New-\* and Set-\* cmdlets) don't have a built-in pause. For these cmdlets, specifying the Confirm switch without a value introduces a pause that forces you acknowledge the command before proceeding.

  defaultValue: None
  position: Named
  aliases: cf
  applicable:
  - Exchange Online
  parameterValueGroup: ""
- type: <xref href="SecurityPrincipalIdParameter" data-throw-if-not-resolved="False" />
  name: OrgWideAccount
  description: |+
    This parameter is reserved for internal Microsoft use.

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - Exchange Online
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: WhatIf
  description: |+
    The WhatIf switch simulates the actions of the command. You can use this switch to view the changes that would occur without actually applying those changes. You don't need to specify a value with this switch.

  defaultValue: None
  position: Named
  aliases: wi
  applicable:
  - Exchange Online
  parameterValueGroup: ""
applicable:
- Exchange Online
uid: ExchangePowerShell.New-AvailabilityConfig
name: New-AvailabilityConfig
description: |-
  You need to be assigned permissions before you can run this cmdlet. Although this topic lists all parameters for the cmdlet, you may not have access to some parameters if they're not included in the permissions assigned to you. To find the permissions required to run any cmdlet or parameter in your organization, see [Find the permissions required to run any Exchange cmdlet](https://learn.microsoft.com/powershell/exchange/find-exchange-cmdlet-permissions).
metadata:
  external help file: Microsoft.Exchange.CalendarsAndGroups-Help.xml
  online version: https://learn.microsoft.com/powershell/module/exchange/new-availabilityconfig
  applicable: Exchange Online
  title: New-AvailabilityConfig
  schema: 2.0.0
  author: chrisda
  ms.author: chrisda
  ms.reviewer: ""
