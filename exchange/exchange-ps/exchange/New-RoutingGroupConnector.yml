### YamlMime:PowershellCmdlet
summary: |-
  This cmdlet is available only in Exchange Server 2010.

  Use the New-RoutingGroupConnector cmdlet to establish a connection between a Microsoft Exchange Server 2010 routing group and an Exchange Server 2003 routing group when the organization is running more than one version of Exchange.

  For information about the parameter sets in the Syntax section below, see [Exchange cmdlet syntax](https://learn.microsoft.com/powershell/exchange/exchange-cmdlet-syntax).
module: ExchangePowerShell
notes: ""
inputs:
- name: <xref href="Input types" data-throw-if-not-resolved="False" />
  description: |-
    To see the input types that this cmdlet accepts, see [Cmdlet Input and Output Types](https://go.microsoft.com/fwlink/p/?LinkId=2081749). If the Input Type field for a cmdlet is blank, the cmdlet doesn't accept input data.
outputs:
- name: <xref href="Output types" data-throw-if-not-resolved="False" />
  description: |-
    To see the return types, which are also known as output types, that this cmdlet accepts, see [Cmdlet Input and Output Types](https://go.microsoft.com/fwlink/p/?LinkId=2081749). If the Output Type field is blank, the cmdlet doesn't return data.
syntaxes:
- >-
  New-RoutingGroupConnector [-Name] <String> -SourceTransportServers <MultiValuedProperty> -TargetTransportServers <MultiValuedProperty>

   [-BiDirectional <Boolean>]

   [-Confirm]

   [-Cost <Int32>]

   [-DomainController <Fqdn>]

   [-PublicFolderReferralsEnabled <Boolean>]

   [-WhatIf]

   [<CommonParameters>]
examples:
- title: Example 1
  code: |-
    New-RoutingGroupConnector -Name "Interop RGC" -SourceTransportServers "Hub2010.contoso.com" -TargetTransportServers "Bridgehead2003.contoso.com" -Cost 100 -Bidirectional $true
  description: |-
    This example creates the routing group connector Interop RGC with the following properties:

    - The Exchange 2010 server is Hub2010.contoso.com.
    - The Exchange 2003 bridgehead server is Bridgehead2003.contoso.com.
    - The routing group connector is a two-way connector between the Exchange 2010 routing group and the routing group associated with the specified Exchange 2003 server.
    - The cost is 100.
  summary: ""
parameters:
- type: <xref href="Boolean" data-throw-if-not-resolved="False" />
  name: BiDirectional
  description: |+
    The BiDirectional parameter specifies whether this is a one-way or two-way connector. The default value is $false.

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - Exchange Server 2010
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: Confirm
  description: |+
    The Confirm switch specifies whether to show or hide the confirmation prompt. How this switch affects the cmdlet depends on if the cmdlet requires confirmation before proceeding.

    - Destructive cmdlets (for example, Remove-\* cmdlets) have a built-in pause that forces you to acknowledge the command before proceeding. For these cmdlets, you can skip the confirmation prompt by using this exact syntax: `-Confirm:$false`.
    - Most other cmdlets (for example, New-\* and Set-\* cmdlets) don't have a built-in pause. For these cmdlets, specifying the Confirm switch without a value introduces a pause that forces you acknowledge the command before proceeding.

  defaultValue: None
  position: Named
  aliases: cf
  applicable:
  - Exchange Server 2010
  parameterValueGroup: ""
- type: <xref href="Int32" data-throw-if-not-resolved="False" />
  name: Cost
  description: |+
    The Cost parameter specifies a cost to the connector. Transport servers use the connector cost to determine the least cost routing path from a source server to the destination server for message delivery. The default value is 1.

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - Exchange Server 2010
  parameterValueGroup: ""
- type: <xref href="Fqdn" data-throw-if-not-resolved="False" />
  name: DomainController
  description: |+
    The DomainController parameter specifies the domain controller that's used by this cmdlet to read data from or write data to Active Directory. You identify the domain controller by its fully qualified domain name (FQDN). For example, dc01.contoso.com.

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - Exchange Server 2010
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: Name
  isRequired: true
  description: |+
    The Name parameter specifies the name to assign to the routing group connector.

  defaultValue: None
  position: "1"
  aliases: ""
  applicable:
  - Exchange Server 2010
  parameterValueGroup: ""
- type: <xref href="Boolean" data-throw-if-not-resolved="False" />
  name: PublicFolderReferralsEnabled
  description: |+
    The PublicFolderReferralsEnabled parameter specifies whether users can use this routing group connector to access a public folder replica located in the routing group of the target servers when an instance of that public folder isn't available in the same routing group as the user's mailbox. The default value is $true.

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - Exchange Server 2010
  parameterValueGroup: ""
- type: <xref href="MultiValuedProperty" data-throw-if-not-resolved="False" />
  name: SourceTransportServers
  isRequired: true
  description: |+
    The SourceTransportServers parameter specifies the host name or fully qualified domain name (FQDN) of the transport servers used to send messages to the target transport servers. You can specify more than one server by separating each entry with a comma.

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - Exchange Server 2010
  parameterValueGroup: ""
- type: <xref href="MultiValuedProperty" data-throw-if-not-resolved="False" />
  name: TargetTransportServers
  isRequired: true
  description: |+
    The TargetTransportServers parameter specifies the host name or FQDN of the transport servers that receive messages from the source transport servers. You can specify more than one server by separating each entry with a comma.

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - Exchange Server 2010
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: WhatIf
  description: |+
    The WhatIf switch simulates the actions of the command. You can use this switch to view the changes that would occur without actually applying those changes. You don't need to specify a value with this switch.

  defaultValue: None
  position: Named
  aliases: wi
  applicable:
  - Exchange Server 2010
  parameterValueGroup: ""
applicable:
- Exchange Server 2010
uid: ExchangePowerShell.New-RoutingGroupConnector
name: New-RoutingGroupConnector
description: |-
  The New-RoutingGroupConnector cmdlet creates a new routing group connector between the Exchange 2010 routing group and Exchange Server 2003 routing groups. A routing group connector is used to send and receive messages between computers that have the Exchange 2010 Hub Transport server role installed and Exchange 2003 bridgehead servers. The Exchange 2003 source servers specified in this cmdlet are automatically added to the ExchangeLegacyInterop universal security group. By default, the Exchange 2010 system grants Send to and Receive from permissions on the Hub Transport servers to the members of this group.

  To create the routing group connector, you must specify the source servers from the originating routing group and the target servers in the destination routing group. The routing group connector is created in the routing group of which the source server is a member. By using the Bidirectional parameter, you can specify whether the connector is used for one-way or two-way mail flow. If you specify a two-way connector, a reciprocal connector is created in the target routing group. The source and target servers must be Exchange 2010 Hub Transport servers or Exchange 2003 bridgehead servers.

  You need to be assigned permissions before you can run this cmdlet. Although this topic lists all parameters for the cmdlet, you may not have access to some parameters if they're not included in the permissions assigned to you. To find the permissions required to run any cmdlet or parameter in your organization, see [Find the permissions required to run any Exchange cmdlet](https://learn.microsoft.com/powershell/exchange/find-exchange-cmdlet-permissions).
metadata:
  external help file: Microsoft.Exchange.RemoteConnections-Help.xml
  online version: https://learn.microsoft.com/powershell/module/exchange/new-routinggroupconnector
  applicable: Exchange Server 2010
  title: New-RoutingGroupConnector
  schema: 2.0.0
  author: chrisda
  ms.author: chrisda
  ms.reviewer: ""
