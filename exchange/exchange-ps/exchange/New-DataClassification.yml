### YamlMime:PowershellCmdlet
summary: |-
  This cmdlet is functional only in on-premises Exchange.

  In Exchange Online, this cmdlet has been replaced by the [New-DlpSensitiveInformationType](https://learn.microsoft.com/powershell/module/exchange/new-dlpsensitiveinformationtype) cmdlet in Security & Compliance PowerShell.

  Use the New-DataClassification cmdlet to create data classification rules that use document fingerprints.

  For information about the parameter sets in the Syntax section below, see [Exchange cmdlet syntax](https://learn.microsoft.com/powershell/exchange/exchange-cmdlet-syntax).
module: ExchangePowerShell
notes: ""
inputs:
- name: <xref href="Input types" data-throw-if-not-resolved="False" />
  description: |-
    To see the input types that this cmdlet accepts, see [Cmdlet Input and Output Types](https://go.microsoft.com/fwlink/p/?linkId=616387). If the Input Type field for a cmdlet is blank, the cmdlet doesn't accept input data.
outputs:
- name: <xref href="Output types" data-throw-if-not-resolved="False" />
  description: |-
    To see the return types, which are also known as output types, that this cmdlet accepts, see [Cmdlet Input and Output Types](https://go.microsoft.com/fwlink/p/?linkId=616387). If the Output Type field is blank, the cmdlet doesn't return data.
syntaxes:
- >-
  New-DataClassification [-Name] <String> -Description <String> -Fingerprints <MultiValuedProperty>

   [-ClassificationRuleCollectionIdentity <ClassificationRuleCollectionIdParameter>]

   [-Confirm]

   [-DomainController <Fqdn>]

   [-Locale <CultureInfo>]

   [-WhatIf]

   [<CommonParameters>]
examples:
- title: Example 1
  code: |-
    $Employee_Template = [System.IO.File]::ReadAllBytes('C:\My Documents\Contoso Employee Template.docx')

    $Employee_Fingerprint = New-Fingerprint -FileData $Employee_Template -Description "Contoso Employee Template"

    $Customer_Template = [System.IO.File]::ReadAllBytes('D:\Data\Contoso Customer Template.docx')

    $Customer_Fingerprint = New-Fingerprint -FileData $Customer_Template -Description "Contoso Customer Template"

    New-DataClassification -Name "Contoso Employee-Customer Confidential" -Fingerprints $Employee_Fingerprint,$Customer_Fingerprint -Description "Message contains Contoso employee or customer information."
  description: |-
    This example creates a new data classification rule named "Contoso Employee-Customer Confidential" that uses the document fingerprints of the files C:\\My Documents\\Contoso Employee Template.docx and D:\\Data\\Contoso Customer Template.docx.
  summary: ""
parameters:
- type: <xref href="ClassificationRuleCollectionIdParameter" data-throw-if-not-resolved="False" />
  name: ClassificationRuleCollectionIdentity
  description: |+
    This parameter is reserved for internal Microsoft use.

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - Exchange Server 2013
  - Exchange Server 2016
  - Exchange Server 2019
  - Exchange Online
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: Confirm
  description: |+
    The Confirm switch specifies whether to show or hide the confirmation prompt. How this switch affects the cmdlet depends on if the cmdlet requires confirmation before proceeding.

    - Destructive cmdlets (for example, Remove-\* cmdlets) have a built-in pause that forces you to acknowledge the command before proceeding. For these cmdlets, you can skip the confirmation prompt by using this exact syntax: `-Confirm:$false`.
    - Most other cmdlets (for example, New-\* and Set-\* cmdlets) don't have a built-in pause. For these cmdlets, specifying the Confirm switch without a value introduces a pause that forces you acknowledge the command before proceeding.

  defaultValue: None
  position: Named
  aliases: cf
  applicable:
  - Exchange Server 2013
  - Exchange Server 2016
  - Exchange Server 2019
  - Exchange Online
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: Description
  isRequired: true
  description: |+
    The Description parameter specifies a description for the data classification rule.

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - Exchange Server 2013
  - Exchange Server 2016
  - Exchange Server 2019
  - Exchange Online
  parameterValueGroup: ""
- type: <xref href="Fqdn" data-throw-if-not-resolved="False" />
  name: DomainController
  description: |+
    The DomainController parameter specifies the domain controller that's used by this cmdlet to read data from or write data to Active Directory. You identify the domain controller by its fully qualified domain name (FQDN). For example, dc01.contoso.com.

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - Exchange Server 2013
  - Exchange Server 2016
  - Exchange Server 2019
  parameterValueGroup: ""
- type: <xref href="MultiValuedProperty" data-throw-if-not-resolved="False" />
  name: Fingerprints
  isRequired: true
  description: |+
    The Fingerprints parameter specifies the byte-encoded files to use as document fingerprints. You can use multiple document fingerprints separated by commas. For instructions on how to import documents to use as templates for fingerprints, see [New-Fingerprint](https://learn.microsoft.com/powershell/module/exchange/new-fingerprint) or the Examples section.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  applicable:
  - Exchange Server 2013
  - Exchange Server 2016
  - Exchange Server 2019
  - Exchange Online
  parameterValueGroup: ""
- type: <xref href="CultureInfo" data-throw-if-not-resolved="False" />
  name: Locale
  description: |+
    The Locale parameter specifies the language that's associated with the data classification rule.

    Valid input for this parameter is a supported culture code value from the Microsoft .NET Framework CultureInfo class. For example, da-DK for Danish or ja-JP for Japanese. For more information, see [CultureInfo Class](https://learn.microsoft.com/dotnet/api/system.globalization.cultureinfo).

    You can add additional language translations to the data classification rule by using the Set-DataClassification cmdlet.

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - Exchange Server 2013
  - Exchange Server 2016
  - Exchange Server 2019
  - Exchange Online
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: Name
  isRequired: true
  description: |+
    The Name parameter specifies a name for the data classification rule. The value must be less than 256 characters.

    The value of this parameter is used in the Policy Tip that's presented to users in Outlook on the web.

  defaultValue: None
  position: "1"
  aliases: ""
  applicable:
  - Exchange Server 2013
  - Exchange Server 2016
  - Exchange Server 2019
  - Exchange Online
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: WhatIf
  description: |+
    The WhatIf switch simulates the actions of the command. You can use this switch to view the changes that would occur without actually applying those changes. You don't need to specify a value with this switch.

  defaultValue: None
  position: Named
  aliases: wi
  applicable:
  - Exchange Server 2013
  - Exchange Server 2016
  - Exchange Server 2019
  - Exchange Online
  parameterValueGroup: ""
applicable:
- Exchange Server 2013
- Exchange Server 2016
- Exchange Server 2019
- Exchange Online
uid: ExchangePowerShell.New-DataClassification
name: New-DataClassification
description: |-
  Classification rule packages are used by data loss prevention (DLP) to detect sensitive content in messages.

  You need to be assigned permissions before you can run this cmdlet. Although this topic lists all parameters for the cmdlet, you may not have access to some parameters if they're not included in the permissions assigned to you. To find the permissions required to run any cmdlet or parameter in your organization, see [Find the permissions required to run any Exchange cmdlet](https://learn.microsoft.com/powershell/exchange/find-exchange-cmdlet-permissions).
metadata:
  external help file: Microsoft.Exchange.RemoteConnections-Help.xml
  online version: https://learn.microsoft.com/powershell/module/exchange/new-dataclassification
  applicable: Exchange Server 2013, Exchange Server 2016, Exchange Server 2019, Exchange Online
  title: New-DataClassification
  schema: 2.0.0
  author: chrisda
  ms.author: chrisda
  ms.reviewer: ""
