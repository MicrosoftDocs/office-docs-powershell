### YamlMime:PowershellCmdlet
summary: |-
  This cmdlet is available only in the cloud-based service.

  Use the Validate-OutboundConnector cmdlet to test the settings of Outbound connectors in Microsoft 365.

  **Note**: This cmdlet does not set the validation status or timestamp on the connector. To set these values, run the following command: `Set-OutboundConnector -Identity "<ConnectorName>" -IsValidated $true -LastValidationTimestamp (Get-Date).ToUniversalTime()`.

  For information about the parameter sets in the Syntax section below, see [Exchange cmdlet syntax](https://learn.microsoft.com/powershell/exchange/exchange-cmdlet-syntax).
module: ExchangePowerShell
notes: ""
syntaxes:
- >-
  Validate-OutboundConnector -Identity <OutboundConnectorIdParameter> -Recipients <MultiValuedProperty>

   [-Confirm]

   [-WhatIf]

   [<CommonParameters>]
examples:
- title: Example 1
  code: |-
    Validate-OutboundConnector -Identity "Contoso.com Outbound Connector" -Recipients laura@contoso.com,julia@contoso.com
  description: |-
    This example tests the Outbound connector named Contoso.com Outbound Connector.
  summary: ""
parameters:
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: Confirm
  description: |+
    The Confirm switch specifies whether to show or hide the confirmation prompt. How this switch affects the cmdlet depends on if the cmdlet requires confirmation before proceeding.

    - Destructive cmdlets (for example, Remove-\* cmdlets) have a built-in pause that forces you to acknowledge the command before proceeding. For these cmdlets, you can skip the confirmation prompt by using this exact syntax: `-Confirm:$false`.
    - Most other cmdlets (for example, New-\* and Set-\* cmdlets) don't have a built-in pause. For these cmdlets, specifying the Confirm switch without a value introduces a pause that forces you acknowledge the command before proceeding.

  defaultValue: None
  position: Named
  aliases: cf
  applicable:
  - Exchange Online
  - Exchange Online Protection
  parameterValueGroup: ""
- type: <xref href="OutboundConnectorIdParameter" data-throw-if-not-resolved="False" />
  name: Identity
  isRequired: true
  description: |+
    The Identity parameter specifies the Outbound connector that you want to test. You can use any value that uniquely identifies the connector. For example:

    - Name
    - Distinguished name
    - GUID

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - Exchange Online
  - Exchange Online Protection
  parameterValueGroup: ""
- type: <xref href="MultiValuedProperty" data-throw-if-not-resolved="False" />
  name: Recipients
  isRequired: true
  description: |+
    The Recipients parameter specifies one or more email addresses to send a test message to. The email addresses need to be in the domain that's configured on the connector.

    You can enter multiple values separated by commas. If the values contain spaces or otherwise require quotation marks, use the following syntax: `"Value1","Value2",..."ValueN"`.

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - Exchange Online
  - Exchange Online Protection
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: WhatIf
  description: |+
    The WhatIf switch simulates the actions of the command. You can use this switch to view the changes that would occur without actually applying those changes. You don't need to specify a value with this switch.

  defaultValue: None
  position: Named
  aliases: wi
  applicable:
  - Exchange Online
  - Exchange Online Protection
  parameterValueGroup: ""
applicable:
- Exchange Online
- Exchange Online Protection
uid: ExchangePowerShell.Validate-OutboundConnector
name: Validate-OutboundConnector
description: |-
  The Validate-OutboundConnector cmdlet performs two tests on the specified connector:

  - SMTP connectivity to each smart host that's defined on the connector.
  - Send test email messages to one or more recipients in the domain that's configured on the connector.

  You need to be assigned permissions before you can run this cmdlet. Although this topic lists all parameters for the cmdlet, you may not have access to some parameters if they're not included in the permissions assigned to you. To find the permissions required to run any cmdlet or parameter in your organization, see [Find the permissions required to run any Exchange cmdlet](https://learn.microsoft.com/powershell/exchange/find-exchange-cmdlet-permissions).
metadata:
  external help file: Microsoft.Exchange.TransportMailflow-Help.xml
  online version: https://learn.microsoft.com/powershell/module/exchange/validate-outboundconnector
  applicable: Exchange Online, Exchange Online Protection
  title: Validate-OutboundConnector
  schema: 2.0.0
  author: chrisda
  ms.author: chrisda
  ms.reviewer: ""
