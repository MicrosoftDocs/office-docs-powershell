### YamlMime:PowershellCmdlet
summary: |-
  This cmdlet is available only in Security & Compliance PowerShell. For more information, see [Security & Compliance PowerShell](https://learn.microsoft.com/powershell/exchange/scc-powershell).

  Use the New-DlpKeywordDictionary cmdlet to create data loss prevention (DLP) keyword dictionaries in the Microsoft Purview compliance portal.

  For information about the parameter sets in the Syntax section below, see [Exchange cmdlet syntax](https://learn.microsoft.com/powershell/exchange/exchange-cmdlet-syntax).
module: ExchangePowerShell
notes: ""
syntaxes:
- >-
  New-DlpKeywordDictionary -Name <String>

   [-Confirm]

   [-Description <String>]

   [-DoNotPersistKeywords]

   [-FileData <Byte[]>]

   [-Organization <OrganizationIdParameter>]

   [-WhatIf]

   [<CommonParameters>]
examples:
- title: Example 1
  code: |-
    $Keywords = @("Aarskog's syndrome","Abandonment","Abasia","Abderhalden-Kaufmann-Lignac","Abdominalgia","Abduction contracture","Abetalipo proteinemia","Abiotrophy","Ablatio","ablation","Ablepharia","Abocclusion","Abolition","Aborter","Abortion","Abortus","Aboulomania","Abrami's disease","Abramo")

    $EncodedKeywords = $Keywords | ForEach-Object {[System.Text.Encoding]::Unicode.GetBytes($_+"`r`n")}

    New-DlpKeywordDictionary -Name "Diseases" -Description "Names of diseases and injuries from ICD-10-CM lexicon" -FileData $EncodedKeywords
  description: |-
    This example creates a DLP keyword dictionary named Diseases by using the specified values.
  summary: ""
- title: Example 2
  code: |-
    $Keywords = Get-Content "C:\My Documents\InappropriateTerms.txt"

    $EncodedKeywords = $Keywords | ForEach-Object {[System.Text.Encoding]::Unicode.GetBytes($_+"`r`n")}

    New-DlpKeywordDictionary -Name "Inappropriate Language" -Description "Unprofessional and inappropriate terminology" -FileData $EncodedKeywords
  description: |-
    This example creates a DLP keyword dictionary named Inappropriate Language from the file C:\\My Documents\\InappropriateTerms.txt. The file contains one term on each line.
  summary: ""
parameters:
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: Confirm
  description: |+
    The Confirm switch specifies whether to show or hide the confirmation prompt. How this switch affects the cmdlet depends on if the cmdlet requires confirmation before proceeding.

    - Destructive cmdlets (for example, Remove-\* cmdlets) have a built-in pause that forces you to acknowledge the command before proceeding. For these cmdlets, you can skip the confirmation prompt by using this exact syntax: `-Confirm:$false`.
    - Most other cmdlets (for example, New-\* and Set-\* cmdlets) don't have a built-in pause. For these cmdlets, specifying the Confirm switch without a value introduces a pause that forces you acknowledge the command before proceeding.

  defaultValue: None
  position: Named
  aliases: cf
  applicable:
  - Security & Compliance
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: Description
  description: |+
    The Description parameter specifies descriptive text for the DLP keyword dictionary. If the value contains spaces, enclose the value in quotation marks.

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - Security & Compliance
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: DoNotPersistKeywords
  description: |+
    {{ Fill DoNotPersistKeywords Description }}

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - Security & Compliance
  parameterValueGroup: ""
- type: <xref href="Byte" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: FileData
  description: |+
    The FileData parameter specifies the terms that are used in the DLP keyword dictionary. This parameter requires a comma-separated list of values that's binary encoded in UTF-16. For more information, see the examples in this topic.

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - Security & Compliance
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: Name
  isRequired: true
  description: |+
    The Name parameter specifies a unique name for the DLP keyword dictionary. If the value contains spaces, enclose the value in quotation marks.

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - Security & Compliance
  parameterValueGroup: ""
- type: <xref href="OrganizationIdParameter" data-throw-if-not-resolved="False" />
  name: Organization
  description: |+
    {{ Fill Organization Description }}

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - Security & Compliance
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: WhatIf
  description: |+
    The WhatIf switch doesn't work in Security & Compliance PowerShell.

  defaultValue: None
  position: Named
  aliases: wi
  applicable:
  - Security & Compliance
  parameterValueGroup: ""
applicable:
- Security & Compliance
uid: ExchangePowerShell.New-DlpKeywordDictionary
name: New-DlpKeywordDictionary
description: |-
  After you create a custom sensitive information type that specifies the identity (GUID value) of the DLP keyword dictionary, the dictionary will appear in your list of sensitive information types, and you can use it in policies.

  To use this cmdlet in Security & Compliance PowerShell, you need to be assigned permissions. For more information, see [Permissions in the Microsoft Purview compliance portal](https://learn.microsoft.com/purview/microsoft-365-compliance-center-permissions).
metadata:
  external help file: Microsoft.Exchange.TransportMailflow-Help.xml
  online version: https://learn.microsoft.com/powershell/module/exchange/new-dlpkeyworddictionary
  applicable: Security & Compliance
  title: New-DlpKeywordDictionary
  schema: 2.0.0
  author: chrisda
  ms.author: chrisda
  ms.reviewer: ""
