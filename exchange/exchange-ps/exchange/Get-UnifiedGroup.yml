### YamlMime:PowershellCmdlet
summary: |-
  This cmdlet is available only in the cloud-based service.

  Use the Get-UnifiedGroup cmdlet to view Microsoft 365 Groups in your cloud-based organization. To view members, owners and subscribers for Microsoft 365 Groups, use the Get-UnifiedGroupLinks cmdlet.

  For information about the parameter sets in the Syntax section below, see [Exchange cmdlet syntax](https://learn.microsoft.com/powershell/exchange/exchange-cmdlet-syntax).
module: ExchangePowerShell
notes: ""
syntaxes:
- >-
  Get-UnifiedGroup [[-Identity] <UnifiedGroupIdParameter>]

   [-Filter <String>]

   [-IncludeAllProperties]

   [-IncludeSoftDeletedGroups]

   [-ResultSize <Unlimited>]

   [-SortBy <String>]

   [<CommonParameters>]
- >-
  Get-UnifiedGroup [-Anr <String>]

   [-Filter <String>]

   [-IncludeAllProperties]

   [-IncludeSoftDeletedGroups]

   [-ResultSize <Unlimited>]

   [-SortBy <String>]

   [<CommonParameters>]
examples:
- title: Example 1
  code: |-
    Get-UnifiedGroup
  description: |-
    This example returns a summary list of all Microsoft 365 Groups.
  summary: ""
- title: Example 2
  code: |-
    Get-UnifiedGroup | Format-List DisplayName,EmailAddresses,Notes,ManagedBy,AccessType
  description: |-
    This example returns the following information about all Microsoft 365 Groups:

    - Display name
    - Email address
    - Description
    - Owners
    - Privacy
  summary: ""
- title: Example 3
  code: |-
    Get-UnifiedGroup -Identity "Marketing Department" | Format-List
  description: |-
    This example returns detailed information about the Microsoft 365 Group named Marketing Department.
  summary: ""
- title: Example 4
  code: |-
    Get-UnifiedGroup | Where-Object {-Not $_.ManagedBy}
  description: |-
    This example returns Microsoft 365 Groups that do not have an owner.
  summary: ""
- title: Example 5
  code: |-
    Get-UnifiedGroup -Filter {ResourceProvisioningOptions -eq "Team"}
  description: |-
    This example returns Microsoft 365 Groups that are created when a Microsoft Team is created.
  summary: ""
parameters:
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: Anr
  description: |+
    This parameter is reserved for internal Microsoft use.

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - Exchange Online
  - Exchange Online Protection
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: Filter
  description: |+
    The Filter parameter uses OPATH syntax to filter the results by the specified properties and values. The search criteria uses the syntax `"Property -ComparisonOperator 'Value'"`.

    - Enclose the whole OPATH filter in double quotation marks " ". If the filter contains system values (for example, `$true`, `$false`, or `$null`), use single quotation marks ' ' instead. Although this parameter is a string (not a system block), you can also use braces { }, but only if the filter doesn't contain variables.
    - Property is a filterable property. For more information about the filterable properties in Exchange server and Exchange Online, see [Filterable properties for the Filter parameter](https://learn.microsoft.com/powershell/exchange/filter-properties).
    - ComparisonOperator is an OPATH comparison operator (for example `-eq` for equals and `-like` for string comparison). For more information about comparison operators, see [about_Comparison_Operators](https://learn.microsoft.com/powershell/module/microsoft.powershell.core/about/about_comparison_operators).
    - Value is the property value to search for. Enclose text values and variables in single quotation marks (`'Value'` or `'$Variable'`). If a variable value contains single quotation marks, you need to identify (escape) the single quotation marks to expand the variable correctly. For example, instead of `'$User'`, use `'$($User -Replace "'","''")'`. Don't enclose integers or system values in quotation marks (for example, use `500`, `$true`, `$false`, or `$null` instead).

    You can chain multiple search criteria together using the logical operators `-and` and `-or`. For example, `"Criteria1 -and Criteria2"` or `"(Criteria1 -and Criteria2) -or Criteria3"`.

    For detailed information about OPATH filters in Exchange, see [Additional OPATH syntax information](https://learn.microsoft.com/powershell/exchange/recipient-filters#additional-opath-syntax-information).

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - Exchange Online
  - Exchange Online Protection
  parameterValueGroup: ""
- type: <xref href="UnifiedGroupIdParameter" data-throw-if-not-resolved="False" />
  name: Identity
  description: |+
    The Identity parameter specifies the Microsoft 365 Group that you want to view. You can use any value that uniquely identifies the Microsoft 365 Group. For example:

    - Name
    - Alias
    - Distinguished name (DN)
    - Canonical DN
    - Email address
    - GUID

    **Note**: You can use the DisplayName value to identify the Microsoft 365 Group, but the results aren't guaranteed to be unique. If you must return a singular and unique result, use a unique identifier for the Microsoft 365 Group.

  defaultValue: None
  pipelineInput: true
  position: "1"
  aliases: ""
  applicable:
  - Exchange Online
  - Exchange Online Protection
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: IncludeAllProperties
  description: |+
    The IncludeAllProperties switch specifies whether to include the values of all properties in the results. You don't need to specify a value with this switch.

    If you don't use this switch, the values of some properties (for example, CalendarMemberReadOnly, CalendarUrl, InboxUrl, PeopleUrl, and PhotoUrl) might appear blank.

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - Exchange Online
  - Exchange Online Protection
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: IncludeSoftDeletedGroups
  description: |+
    The IncludeSoftDeletedGroups switch specifies whether to include soft-deleted Microsoft 365 Groups in the results. You don't need to specify a value with this switch.

    Soft-deleted Microsoft 365 Groups are deleted groups that are still recoverable.

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - Exchange Online
  - Exchange Online Protection
  parameterValueGroup: ""
- type: <xref href="Unlimited" data-throw-if-not-resolved="False" />
  name: ResultSize
  description: |+
    The ResultSize parameter specifies the maximum number of results to return. If you want to return all requests that match the query, use unlimited for the value of this parameter. The default value is 1000.

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - Exchange Online
  - Exchange Online Protection
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: SortBy
  description: |+
    The SortBy parameter specifies the property to sort the results by. You can sort by only one property at a time. The results are sorted in ascending order.

    If the default view doesn't include the property you're sorting by, you can append the command with ` | Format-Table -Auto Property1,Property2,...PropertyX`. to create a new view that contains all of the properties that you want to see. Wildcards (\*) in the property names are supported.

    You can sort by the following properties:

    - Name
    - DisplayName
    - Alias

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - Exchange Online
  - Exchange Online Protection
  parameterValueGroup: ""
applicable:
- Exchange Online
- Exchange Online Protection
uid: ExchangePowerShell.Get-UnifiedGroup
name: Get-UnifiedGroup
description: |-
  Microsoft 365 Groups are group objects that are available across Microsoft 365 services.

  You need to be assigned permissions before you can run this cmdlet. Although this topic lists all parameters for the cmdlet, you may not have access to some parameters if they're not included in the permissions assigned to you. To find the permissions required to run any cmdlet or parameter in your organization, see [Find the permissions required to run any Exchange cmdlet](https://learn.microsoft.com/powershell/exchange/find-exchange-cmdlet-permissions).
metadata:
  external help file: Microsoft.Exchange.RolesAndAccess-Help.xml
  online version: https://learn.microsoft.com/powershell/module/exchange/get-unifiedgroup
  applicable: Exchange Online, Exchange Online Protection
  title: Get-UnifiedGroup
  schema: 2.0.0
  author: chrisda
  ms.author: chrisda
  ms.reviewer: ""
