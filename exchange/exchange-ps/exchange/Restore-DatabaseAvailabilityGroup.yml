### YamlMime:PowershellCmdlet
summary: |-
  This cmdlet is available only in on-premises Exchange.

  Use the Restore-DatabaseAvailabilityGroup cmdlet as part of a datacenter switchover of a database availability group (DAG).

  For information about the parameter sets in the Syntax section below, see [Exchange cmdlet syntax](https://learn.microsoft.com/powershell/exchange/exchange-cmdlet-syntax).
module: ExchangePowerShell
notes: ""
inputs:
- name: <xref href="Input types" data-throw-if-not-resolved="False" />
  description: |-
    To see the input types that this cmdlet accepts, see [Cmdlet Input and Output Types](https://go.microsoft.com/fwlink/p/?LinkId=616387). If the Input Type field for a cmdlet is blank, the cmdlet doesn't accept input data.
outputs:
- name: <xref href="Output types" data-throw-if-not-resolved="False" />
  description: |-
    To see the return types, which are also known as output types, that this cmdlet accepts, see [Cmdlet Input and Output Types](https://go.microsoft.com/fwlink/p/?LinkId=616387). If the Output Type field is blank, the cmdlet doesn't return data.
syntaxes:
- >-
  Restore-DatabaseAvailabilityGroup [-Identity] <DatabaseAvailabilityGroupIdParameter>

   [-ActiveDirectorySite <AdSiteIdParameter>]

   [-AlternateWitnessDirectory <NonRootLocalLongFullPath>]

   [-AlternateWitnessServer <FileShareWitnessServerName>]

   [-Confirm]

   [-DomainController <Fqdn>]

   [-UsePrimaryWitnessServer]

   [-WhatIf]

   [<CommonParameters>]
examples:
- title: Example 1
  code: |-
    Restore-DatabaseAvailabilityGroup -Identity DAG1 -ActiveDirectorySite Portland
  description: |-
    This example activates member servers in the DAG DAG1 for the Active Directory site Portland. In this example, the values for the AlternateWitnessServer parameter and the AlternateWitnessDirectory parameter had been previously set by using the Set-DatabaseAvailabilityGroup cmdlet. Thus, there is no need to specify them here.
  summary: ""
- title: Example 2
  code: |-
    Restore-DatabaseAvailabilityGroup -Identity DAG1 -ActiveDirectorySite Redmond -AlternateWitnessServer CAS4 -AlternateWitnessDirectory D:\DAG1
  description: |-
    This example activates member servers in the DAG DAG1 for the Active Directory site Redmond. In this example, the values for the AlternateWitnessServer parameter and the AlternateWitnessDirectory parameter are being set as part of the activation process.
  summary: ""
parameters:
- type: <xref href="AdSiteIdParameter" data-throw-if-not-resolved="False" />
  name: ActiveDirectorySite
  description: |+
    The ActiveDirectorySite parameter specifies the site containing the DAG members to be restored.

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - Exchange Server 2010
  - Exchange Server 2013
  - Exchange Server 2016
  - Exchange Server 2019
  parameterValueGroup: ""
- type: <xref href="NonRootLocalLongFullPath" data-throw-if-not-resolved="False" />
  name: AlternateWitnessDirectory
  description: |+
    The AlternateWitnessDirectory parameter specifies the name of an alternate directory used to store witness data. The specified directory must not be in use by any other DAGs or used for any other purpose. This value can be populated ahead by using the Set-DatabaseAvailabilityGroup cmdlet.

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - Exchange Server 2010
  - Exchange Server 2013
  - Exchange Server 2016
  - Exchange Server 2019
  parameterValueGroup: ""
- type: <xref href="FileShareWitnessServerName" data-throw-if-not-resolved="False" />
  name: AlternateWitnessServer
  description: |+
    The AlternateWitnessServer parameter specifies the name of a new witness server for the DAG as part of a site activation process. This value can be populated ahead by using the Set-DatabaseAvailabilityGroup cmdlet.

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - Exchange Server 2010
  - Exchange Server 2013
  - Exchange Server 2016
  - Exchange Server 2019
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: Confirm
  description: |+
    The Confirm switch specifies whether to show or hide the confirmation prompt. How this switch affects the cmdlet depends on if the cmdlet requires confirmation before proceeding.

    - Destructive cmdlets (for example, Remove-\* cmdlets) have a built-in pause that forces you to acknowledge the command before proceeding. For these cmdlets, you can skip the confirmation prompt by using this exact syntax: `-Confirm:$false`.
    - Most other cmdlets (for example, New-\* and Set-\* cmdlets) don't have a built-in pause. For these cmdlets, specifying the Confirm switch without a value introduces a pause that forces you acknowledge the command before proceeding.

    This cmdlet has a built-in pause, so use `-Confirm:$false` to skip the confirmation.

  defaultValue: None
  position: Named
  aliases: cf
  applicable:
  - Exchange Server 2010
  - Exchange Server 2013
  - Exchange Server 2016
  - Exchange Server 2019
  parameterValueGroup: ""
- type: <xref href="Fqdn" data-throw-if-not-resolved="False" />
  name: DomainController
  description: |+
    The DomainController parameter specifies the domain controller that's used by this cmdlet to read data from or write data to Active Directory. You identify the domain controller by its fully qualified domain name (FQDN). For example, dc01.contoso.com.

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - Exchange Server 2010
  - Exchange Server 2013
  - Exchange Server 2016
  - Exchange Server 2019
  parameterValueGroup: ""
- type: <xref href="DatabaseAvailabilityGroupIdParameter" data-throw-if-not-resolved="False" />
  name: Identity
  isRequired: true
  description: |+
    The Identity parameter specifies the name of the DAG being manipulated.

  defaultValue: None
  pipelineInput: true
  position: "1"
  aliases: ""
  applicable:
  - Exchange Server 2010
  - Exchange Server 2013
  - Exchange Server 2016
  - Exchange Server 2019
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: UsePrimaryWitnessServer
  description: |+
    The UsePrimaryWitnessServer switch specifies that the DAG's currently configured witness server should be used if a witness is needed by the DAG members that are being activated. You don't need to specify a value with this switch.

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - Exchange Server 2013
  - Exchange Server 2016
  - Exchange Server 2019
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: WhatIf
  description: |+
    The WhatIf switch simulates the actions of the command. You can use this switch to view the changes that would occur without actually applying those changes. You don't need to specify a value with this switch.

  defaultValue: None
  position: Named
  aliases: wi
  applicable:
  - Exchange Server 2010
  - Exchange Server 2013
  - Exchange Server 2016
  - Exchange Server 2019
  parameterValueGroup: ""
applicable:
- Exchange Server 2010
- Exchange Server 2013
- Exchange Server 2016
- Exchange Server 2019
uid: ExchangePowerShell.Restore-DatabaseAvailabilityGroup
name: Restore-DatabaseAvailabilityGroup
description: |-
  You can also use this cmdlet for disaster recovery purposes to restore functionality to a DAG that has lost quorum due to one or more DAG members being offline for an extended period. Before running this cmdlet, you must first run the Stop-DatabaseAvailabilityGroup cmdlet.

  The Restore-DatabaseAvailabilityGroup cmdlet can be run against a DAG only when the DAG is configured with a DatacenterActivationMode parameter value of DagOnly. For more information about the DatacenterActivationMode parameter, see [Datacenter Activation Coordination mode](https://learn.microsoft.com/Exchange/high-availability/database-availability-groups/dac-mode).

  You can use the Set-DatabaseAvailabilityGroup cmdlet to configure the value for the DatacenterActivationMode parameter.

  The Restore-DatabaseAvailabilityGroup cmdlet performs several operations that affect the structure and membership of the DAG's cluster. This task does the following:

  - Forcibly evicts the servers listed on the StoppedMailboxServers list from the DAG's cluster, thereby reestablishing quorum for the cluster enabling the surviving DAG members to start and provide service.
  - Configures the DAG to use the alternate witness server if there is an even number of surviving DAG members, or a single surviving DAG member.

  You need to be assigned permissions before you can run this cmdlet. Although this topic lists all parameters for the cmdlet, you may not have access to some parameters if they're not included in the permissions assigned to you. To find the permissions required to run any cmdlet or parameter in your organization, see [Find the permissions required to run any Exchange cmdlet](https://learn.microsoft.com/powershell/exchange/find-exchange-cmdlet-permissions).
metadata:
  external help file: Microsoft.Exchange.ServerStatus-Help.xml
  online version: https://learn.microsoft.com/powershell/module/exchange/restore-databaseavailabilitygroup
  applicable: Exchange Server 2010, Exchange Server 2013, Exchange Server 2016, Exchange Server 2019
  title: Restore-DatabaseAvailabilityGroup
  schema: 2.0.0
  author: chrisda
  ms.author: chrisda
  ms.reviewer: ""
