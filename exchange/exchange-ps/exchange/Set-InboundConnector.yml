### YamlMime:PowershellCmdlet
summary: |-
  This cmdlet is available only in the cloud-based service.

  Use the Set-InboundConnector cmdlet to change an existing Inbound connector in your cloud-based organization.

  For information about the parameter sets in the Syntax section below, see [Exchange cmdlet syntax](https://learn.microsoft.com/powershell/exchange/exchange-cmdlet-syntax).
module: ExchangePowerShell
notes: ""
inputs:
- name: <xref href="Input types" data-throw-if-not-resolved="False" />
  description: |-
    To see the input types that this cmdlet accepts, see [Cmdlet Input and Output Types](https://go.microsoft.com/fwlink/p/?linkId=616387). If the Input Type field for a cmdlet is blank, the cmdlet doesn't accept input data.
outputs:
- name: <xref href="Output types" data-throw-if-not-resolved="False" />
  description: |-
    To see the return types, which are also known as output types, that this cmdlet accepts, see [Cmdlet Input and Output Types](https://go.microsoft.com/fwlink/p/?linkId=616387). If the Output Type field is blank, the cmdlet doesn't return data.
syntaxes:
- >-
  Set-InboundConnector [-Identity] <InboundConnectorIdParameter>

   [-AssociatedAcceptedDomains <MultiValuedProperty>]

   [-CloudServicesMailEnabled <Boolean>]

   [-Comment <String>]

   [-Confirm]

   [-ConnectorSource <TenantConnectorSource>]

   [-ConnectorType <TenantConnectorType>]

   [-EFSkipIPs <MultiValuedProperty>]

   [-EFSkipLastIP <Boolean>]

   [-EFSkipMailGateway <MultiValuedProperty>]

   [-EFTestMode <Boolean>]

   [-EFUsers <MultiValuedProperty>]

   [-Enabled <Boolean>]

   [-Name <String>]

   [-RequireTls <Boolean>]

   [-RestrictDomainsToCertificate <Boolean>]

   [-RestrictDomainsToIPAddresses <Boolean>]

   [-ScanAndDropRecipients <MultiValuedProperty>]

   [-SenderDomains <MultiValuedProperty>]

   [-SenderIPAddresses <MultiValuedProperty>]

   [-TlsSenderCertificateName <TlsCertificate>]

   [-TreatMessagesAsInternal <Boolean>]

   [-TrustedOrganizations <MultiValuedProperty>]

   [-WhatIf]

   [<CommonParameters>]
examples:
- title: Example 1
  code: |-
    Set-InboundConnector "Contoso Inbound Connector" -RequireTls $true -TlsSenderCertificateName contoso.com
  description: |-
    This example makes the following configuration changes to the existing Inbound connector named Contoso.com Inbound Connector.

    Require TLS transmission for all incoming messages on the connector.

    Require that the TLS certificate that is used to encrypt communications contain the domain name contoso.com
  summary: ""
parameters:
- type: <xref href="MultiValuedProperty" data-throw-if-not-resolved="False" />
  name: AssociatedAcceptedDomains
  description: |+
    The AssociatedAcceptedDomains parameter restricts the source domains that use the connector to the specified accepted domains. A valid value is an SMTP domain that's configured as an accepted domain in your Microsoft 365 organization.

    You can specify multiple values separated by commas.

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - Exchange Online
  - Exchange Online Protection
  parameterValueGroup: ""
- type: <xref href="Boolean" data-throw-if-not-resolved="False" />
  name: CloudServicesMailEnabled
  description: |+
    **Note**: We recommend that you don't use this parameter unless you are directed to do so by Microsoft Customer Service and Support, or by specific product documentation. Instead, use the Hybrid Configuration wizard to configure mail flow between your on-premises and cloud organizations. For more information, see [Hybrid Configuration wizard](https://learn.microsoft.com/exchange/hybrid-configuration-wizard).

    The CloudServicesMailEnabled parameter specifies whether the connector is used for hybrid mail flow between an on-premises Exchange environment and Microsoft 365. Specifically, this parameter controls how certain internal X-MS-Exchange-Organization-\* message headers are handled in messages that are sent between accepted domains in the on-premises and cloud organizations. These headers are collectively known as cross-premises headers.

    Valid values are:

    - $true: The connector is used for mail flow in hybrid organizations, so cross-premises headers are preserved or promoted in messages that flow through the connector. This is the default value for connectors that are created by the Hybrid Configuration wizard. Certain X-MS-Exchange-Organization-\* headers in outbound messages that are sent from one side of the hybrid organization to the other are converted to X-MS-Exchange-CrossPremises-\* headers and are thereby preserved in messages. X-MS-Exchange-CrossPremises-\* headers in inbound messages that are received on one side of the hybrid organization from the other are promoted to X-MS-Exchange-Organization-\* headers. These promoted headers replace any instances of the same X-MS-Exchange-Organization-\* headers that already exist in messages.
    - $false: The connector isn't used for mail flow in hybrid organizations, so any cross-premises headers are removed from messages that flow through the connector.

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - Exchange Online
  - Exchange Online Protection
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: Comment
  description: |+
    The Comment parameter specifies an optional comment. If you specify a value that contains spaces, enclose the value in quotation marks ("), for example: "This is an admin note".

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - Exchange Online
  - Exchange Online Protection
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: Confirm
  description: |+
    The Confirm switch specifies whether to show or hide the confirmation prompt. How this switch affects the cmdlet depends on if the cmdlet requires confirmation before proceeding.

    - Destructive cmdlets (for example, Remove-\* cmdlets) have a built-in pause that forces you to acknowledge the command before proceeding. For these cmdlets, you can skip the confirmation prompt by using this exact syntax: `-Confirm:$false`.
    - Most other cmdlets (for example, New-\* and Set-\* cmdlets) don't have a built-in pause. For these cmdlets, specifying the Confirm switch without a value introduces a pause that forces you acknowledge the command before proceeding.

  defaultValue: None
  position: Named
  aliases: cf
  applicable:
  - Exchange Online
  - Exchange Online Protection
  parameterValueGroup: ""
- type: <xref href="TenantConnectorSource" data-throw-if-not-resolved="False" />
  name: ConnectorSource
  description: |+
    The ConnectorSource parameter specifies how the connector is created. Valid input for this parameter includes the following values:

    - Default: The connector is manually created. This is the default value.
    - HybridWizard: The connector is automatically created by the Hybrid Configuration Wizard.
    - Migrated: The connector was originally created in Microsoft Forefront Online Protection for Exchange.

    We recommended that you don't change this value.

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - Exchange Online
  - Exchange Online Protection
  parameterValueGroup: ""
- type: <xref href="TenantConnectorType" data-throw-if-not-resolved="False" />
  name: ConnectorType
  description: |+
    The ConnectorType parameter specifies a category for the domains that are serviced by the connector. Valid input for this parameter includes the following values:

    - Partner: The connector services domains that are external to your organization.
    - OnPremises: The connector services domains that are used by your on-premises organization. Use this value for accepted domains in your cloud-based organization that are also specified by the SenderDomains parameter.

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - Exchange Online
  - Exchange Online Protection
  parameterValueGroup: ""
- type: <xref href="MultiValuedProperty" data-throw-if-not-resolved="False" />
  name: EFSkipIPs
  description: |+
    the EFSkipIPs parameter specifies the source IP addresses to skip in Enhanced Filtering for Connectors when the EFSkipLastIP parameter value is $false. Valid values are:

    - Single IP address: For example, 192.168.1.1.
    - IP address range: For example, 192.168.0.1-192.168.0.254.
    - Classless InterDomain Routing (CIDR) IP address range: For example, 192.168.3.1/24.

    You can specify multiple values separated by commas.

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - Exchange Online
  - Exchange Online Protection
  parameterValueGroup: ""
- type: <xref href="Boolean" data-throw-if-not-resolved="False" />
  name: EFSkipLastIP
  description: |+
    The EFSkipIPs parameter specifies the behavior of Enhanced Filtering for Connectors. Valid values are:

    - $true: Only the last message source is skipped.
    - $false: Skip the source IP addresses specified by the EFSkipIPs parameter. If no IP addresses are specified, Enhanced Filtering for Connectors is disabled on the connector. This is the default value.

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - Exchange Online
  - Exchange Online Protection
  parameterValueGroup: ""
- type: <xref href="MultiValuedProperty" data-throw-if-not-resolved="False" />
  name: EFSkipMailGateway
  description: |+
    This parameter is reserved for internal Microsoft use.

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - Exchange Online
  - Exchange Online Protection
  parameterValueGroup: ""
- type: <xref href="Boolean" data-throw-if-not-resolved="False" />
  name: EFTestMode
  description: |+
    This parameter is reserved for internal Microsoft use.

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - Exchange Online
  - Exchange Online Protection
  parameterValueGroup: ""
- type: <xref href="MultiValuedProperty" data-throw-if-not-resolved="False" />
  name: EFUsers
  description: |+
    The EFUsers parameter specifies the recipients that Enhanced Filtering for Connectors applies to. The default value is blank ($null), which means Enhanced Filtering for Connectors is applied to all recipients.

    You can specify multiple recipient email addresses separated by commas.

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - Exchange Online
  - Exchange Online Protection
  parameterValueGroup: ""
- type: <xref href="Boolean" data-throw-if-not-resolved="False" />
  name: Enabled
  description: |+
    The Enabled parameter enables or disables the connector. Valid values are:

    - $true: The connector is enabled. This is the default value.
    - $false: The connector is disabled.

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - Exchange Online
  - Exchange Online Protection
  parameterValueGroup: ""
- type: <xref href="InboundConnectorIdParameter" data-throw-if-not-resolved="False" />
  name: Identity
  isRequired: true
  description: |+
    The Identity parameter specifies the Inbound connector you want to change.

  defaultValue: None
  pipelineInput: true
  position: "1"
  aliases: ""
  applicable:
  - Exchange Online
  - Exchange Online Protection
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: Name
  description: |+
    The Name parameter specifies a descriptive name for the connector.

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - Exchange Online
  - Exchange Online Protection
  parameterValueGroup: ""
- type: <xref href="Boolean" data-throw-if-not-resolved="False" />
  name: RequireTls
  description: |+
    The RequireTLS parameter specifies whether to require TLS transmission for all messages that are received by the connector. Valid values are:

    - $true: Reject messages if they aren't sent over TLS. This is the default value
    - $false: Allow messages if they aren't sent over TLS.

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - Exchange Online
  - Exchange Online Protection
  parameterValueGroup: ""
- type: <xref href="Boolean" data-throw-if-not-resolved="False" />
  name: RestrictDomainsToCertificate
  description: |+
    The RestrictDomainsToCertificate parameter specifies whether the Subject value of the TLS certificate is checked before messages can use the connector. Valid values are:

    - $true: Mail is allowed to use the connector only if the Subject value of the TLS certificate that the source email server uses to authenticate matches the TlsSenderCertificateName parameter value.
    - $false: The Subject value of the TLS certificate that the source email server uses to authenticate doesn't control whether mail from that source uses the connector. This is the default value.

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - Exchange Online
  - Exchange Online Protection
  parameterValueGroup: ""
- type: <xref href="Boolean" data-throw-if-not-resolved="False" />
  name: RestrictDomainsToIPAddresses
  description: |+
    The RestrictDomainsToIPAddresses parameter specifies whether to reject mail that comes from unknown source IP addresses. Valid values are:

    - $true: Automatically reject mail from domains that are specified by the SenderDomains parameter if the source IP address isn't also specified by the SenderIPAddress parameter.
    - $false: Don't automatically reject mail from domains that are specified by the SenderDomains parameter based on the source IP address. This is the default value.

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - Exchange Online
  - Exchange Online Protection
  parameterValueGroup: ""
- type: <xref href="MultiValuedProperty" data-throw-if-not-resolved="False" />
  name: ScanAndDropRecipients
  description: |+
    This parameter is reserved for internal Microsoft use.

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - Exchange Online
  - Exchange Online Protection
  parameterValueGroup: ""
- type: <xref href="MultiValuedProperty" data-throw-if-not-resolved="False" />
  name: SenderDomains
  description: |+
    The SenderDomains parameter specifies the source domains that the connector accepts messages for. A valid value is an SMTP domain. Wildcards are supported to indicate a domain and all subdomains (for example, \*.contoso.com), but you can't embed the wildcard character (for example, domain.\*.contoso.com is not valid).

    You can specify multiple domains separated by commas.

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - Exchange Online
  - Exchange Online Protection
  parameterValueGroup: ""
- type: <xref href="MultiValuedProperty" data-throw-if-not-resolved="False" />
  name: SenderIPAddresses
  description: |+
    The SenderIPAddresses parameter specifies the remote IPV4 IP addresses from which this connector accepts messages. IPv6 addresses are not supported. Valid values are:

    - Single IP address: For example, 192.168.1.1.
    - Classless InterDomain Routing (CIDR) IP address range: For example, 192.168.0.1/25. Valid subnet mask values are /24 through /32.

    You can specify multiple values separated by commas.

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - Exchange Online
  - Exchange Online Protection
  parameterValueGroup: ""
- type: <xref href="TlsCertificate" data-throw-if-not-resolved="False" />
  name: TlsSenderCertificateName
  description: |+
    The TlsSenderCertificateName parameter specifies the TLS certificate that's used when the value of the RequireTls parameter is $true. A valid value is an SMTP domain. Wildcards are supported to indicate a domain and all subdomains (for example, \*.contoso.com), but you can't embed the wildcard character (for example, domain.\*.contoso.com is not valid).

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - Exchange Online
  - Exchange Online Protection
  parameterValueGroup: ""
- type: <xref href="Boolean" data-throw-if-not-resolved="False" />
  name: TreatMessagesAsInternal
  description: |+
    The TreatMessagesAsInternal parameter specifies an alternative method to identify messages sent from an on-premises organization as internal messages. You should only consider using this parameter when your on-premises organization doesn't use Exchange. Valid values are:

    - $true: Messages are considered internal if the sender's domain matches a domain that's configured in Microsoft 365. This setting allows internal mail flow between Microsoft 365 and on-premises organizations that don't have Exchange Server 2010 or later installed. However, this setting has potential security risks (for example, internal messages bypass antispam filtering), so use caution when configuring this setting.
    - $false: Messages aren't considered internal. This is the default value.

    In hybrid environments, you don't need to use this parameter, because the Hybrid Configuration wizard automatically configures the required settings on the Inbound connector in Microsoft 365 and the Send connector in the on-premises Exchange organization (the CloudServicesMailEnabled parameter).

    **Note**: You can't set this parameter to the value $true if either of the following conditions is true:

    - The CloudServicesMailEnabled parameter is set to the value $true.
    - The ConnectorType parameter value is not OnPremises.

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - Exchange Online
  - Exchange Online Protection
  parameterValueGroup: ""
- type: <xref href="MultiValuedProperty" data-throw-if-not-resolved="False" />
  name: TrustedOrganizations
  description: |+
    The TrustedOrganizations parameter specifies other Microsoft 365 organizations that are trusted mail sources (for example, after acquisitions and mergers). This parameter works only for mail flow between two Microsoft 365 organizations, so no other parameters are used.

    To enter multiple values and overwrite any existing entries, use the following syntax: `Value1,Value2,...ValueN`. If the values contain spaces or otherwise require quotation marks, use the following syntax: `"Value1","Value2",..."ValueN"`.

    To add or remove one or more values without affecting any existing entries, use the following syntax: `@{Add="Value1","Value2"...; Remove="Value3","Value4"...}`.

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - Exchange Online
  - Exchange Online Protection
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: WhatIf
  description: |+
    The WhatIf switch simulates the actions of the command. You can use this switch to view the changes that would occur without actually applying those changes. You don't need to specify a value with this switch.

  defaultValue: None
  position: Named
  aliases: wi
  applicable:
  - Exchange Online
  - Exchange Online Protection
  parameterValueGroup: ""
applicable:
- Exchange Online
- Exchange Online Protection
uid: ExchangePowerShell.Set-InboundConnector
name: Set-InboundConnector
description: |-
  Inbound connectors accept email messages from remote domains that require specific configuration options.

  You need to be assigned permissions before you can run this cmdlet. Although this topic lists all parameters for the cmdlet, you may not have access to some parameters if they're not included in the permissions assigned to you. To find the permissions required to run any cmdlet or parameter in your organization, see [Find the permissions required to run any Exchange cmdlet](https://learn.microsoft.com/powershell/exchange/find-exchange-cmdlet-permissions).
metadata:
  external help file: Microsoft.Exchange.TransportMailflow-Help.xml
  online version: https://learn.microsoft.com/powershell/module/exchange/set-inboundconnector
  applicable: Exchange Online, Exchange Online Protection
  title: Set-InboundConnector
  schema: 2.0.0
  author: chrisda
  ms.author: chrisda
  ms.reviewer: ""
