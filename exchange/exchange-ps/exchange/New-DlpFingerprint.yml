### YamlMime:PowershellCmdlet
summary: |-
  This cmdlet is available only in Security & Compliance PowerShell. For more information, see [Security & Compliance PowerShell](https://learn.microsoft.com/powershell/exchange/scc-powershell).

  Use the New-DlpFingerprint cmdlet to create document fingerprints that are used with data loss prevention (DLP) sensitive information types in the Microsoft Purview compliance portal. Because the results of New-DlpFingerprint aren't stored outside of the sensitive information type, you always run New-DlpFingerprint and New-DlpSensitiveInformationType or Set-DlpSensitiveInformationType in the same PowerShell session.

  For information about the parameter sets in the Syntax section below, see [Exchange cmdlet syntax](https://learn.microsoft.com/powershell/exchange/exchange-cmdlet-syntax).
module: ExchangePowerShell
notes: ""
syntaxes:
- >-
  New-DlpFingerprint [[-FileData] <Byte[]>] -Description <String>

   [-IsExact <Boolean>]

   [-Confirm]

   [-ThresholdConfig <PswsHashtable>]

   [-WhatIf]

   [<CommonParameters>]
examples:
- title: Example 1
  code: |-
    $Patent_Template = [System.IO.File]::ReadAllBytes('C:\My Documents\Contoso Patent Template.docx)'

    $Patent_Fingerprint = New-DlpFingerprint -FileData $Patent_Template -Description "Contoso Patent Template"
  description: |-
    This example creates a new document fingerprint based on the file C:\\My Documents\\Contoso Patent Template.docx. You store the new fingerprint as a variable so you can use it with the New-DlpSensitiveInformationType cmdlet in the same PowerShell session.
  summary: ""
parameters:
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: Confirm
  description: |+
    The Confirm switch specifies whether to show or hide the confirmation prompt. How this switch affects the cmdlet depends on if the cmdlet requires confirmation before proceeding.

    - Destructive cmdlets (for example, Remove-\* cmdlets) have a built-in pause that forces you to acknowledge the command before proceeding. For these cmdlets, you can skip the confirmation prompt by using this exact syntax: `-Confirm:$false`.
    - Most other cmdlets (for example, New-\* and Set-\* cmdlets) don't have a built-in pause. For these cmdlets, specifying the Confirm switch without a value introduces a pause that forces you acknowledge the command before proceeding.

  defaultValue: None
  position: Named
  aliases: cf
  applicable:
  - Security & Compliance
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: Description
  isRequired: true
  description: |+
    The Description parameter specifies a description for the document fingerprint.

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - Security & Compliance
  parameterValueGroup: ""
- type: <xref href="Byte" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: FileData
  description: |+
    The FileData parameter specifies the file to use as a document fingerprint.

    A valid value for this parameter requires you to read the file to a byte-encoded object using the following syntax: `([System.IO.File]::ReadAllBytes('<Path>\<FileName>'))`. You can use this command as the parameter value, or you can write the output to a variable (`$data = [System.IO.File]::ReadAllBytes('<Path>\<FileName>')`) and use the variable as the parameter value (`$data`).

  defaultValue: None
  position: "1"
  aliases: ""
  applicable:
  - Security & Compliance
  parameterValueGroup: ""
- type: <xref href="Boolean" data-throw-if-not-resolved="False" />
  name: IsExact
  description: |+
    {{ Fill IsExact Description }}

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - Security & Compliance
  parameterValueGroup: ""
- type: <xref href="PswsHashtable" data-throw-if-not-resolved="False" />
  name: ThresholdConfig
  description: |+
    {{ Fill ThresholdConfig Description }}

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - Security & Compliance
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: WhatIf
  description: |+
    The WhatIf switch doesn't work in Security & Compliance PowerShell.

  defaultValue: None
  position: Named
  aliases: wi
  applicable:
  - Security & Compliance
  parameterValueGroup: ""
applicable:
- Security & Compliance
uid: ExchangePowerShell.New-DlpFingerprint
name: New-DlpFingerprint
description: |-
  Sensitive information type rule packages are used by data loss prevention (DLP) to detect sensitive content in messages.

  To use this cmdlet in Security & Compliance PowerShell, you need to be assigned permissions. For more information, see [Permissions in the Microsoft Purview compliance portal](https://learn.microsoft.com/purview/microsoft-365-compliance-center-permissions).
metadata:
  external help file: Microsoft.Exchange.TransportMailflow-Help.xml
  online version: https://learn.microsoft.com/powershell/module/exchange/new-dlpfingerprint
  applicable: Security & Compliance
  title: New-DlpFingerprint
  schema: 2.0.0
  author: chrisda
  ms.author: chrisda
  ms.reviewer: ""
