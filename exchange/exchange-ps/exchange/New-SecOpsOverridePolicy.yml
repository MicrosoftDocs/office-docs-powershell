### YamlMime:PowershellCmdlet
summary: |-
  This cmdlet is available only in the cloud-based service.

  Use the New-SecOpsOverridePolicy cmdlet to create SecOps mailbox override policies to bypass Exchange Online Protection filtering. For more information, see [Configure the advanced delivery policy for third-party phishing simulations and email delivery to SecOps mailboxes](https://learn.microsoft.com/microsoft-365/security/office-365-security/advanced-delivery-policy-configure).

  For information about the parameter sets in the Syntax section below, see [Exchange cmdlet syntax](https://learn.microsoft.com/powershell/exchange/exchange-cmdlet-syntax).
module: ExchangePowerShell
notes: ""
syntaxes:
- >-
  New-SecOpsOverridePolicy [-Name] <String> -SentTo <MultiValuedProperty>

   [-Comment <String>]

   [-Confirm]

   [-DomainController <Fqdn>]

   [-Enabled <Boolean>]

   [-Force]

   [-WhatIf]

   [<CommonParameters>]
examples:
- title: Example 1
  code: |-
    New-SecOpsOverridePolicy -Name SecOpsOverridePolicy -SentTo secops@contoso.com
  description: |-
    This example creates the SecOps mailbox override policy with the specified settings.
  summary: ""
parameters:
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: Comment
  description: |+
    The Comment parameter specifies an optional comment. If you specify a value that contains spaces, enclose the value in quotation marks ("), for example: "This is an admin note".

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - Exchange Online
  - Security & Compliance
  - Exchange Online Protection
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: Confirm
  description: |+
    The Confirm switch specifies whether to show or hide the confirmation prompt. How this switch affects the cmdlet depends on if the cmdlet requires confirmation before proceeding.

    - Destructive cmdlets (for example, Remove-\* cmdlets) have a built-in pause that forces you to acknowledge the command before proceeding. For these cmdlets, you can skip the confirmation prompt by using this exact syntax: `-Confirm:$false`.
    - Most other cmdlets (for example, New-\* and Set-\* cmdlets) don't have a built-in pause. For these cmdlets, specifying the Confirm switch without a value introduces a pause that forces you acknowledge the command before proceeding.

  defaultValue: None
  position: Named
  aliases: cf
  applicable:
  - Exchange Online
  - Security & Compliance
  - Exchange Online Protection
  parameterValueGroup: ""
- type: <xref href="Fqdn" data-throw-if-not-resolved="False" />
  name: DomainController
  description: |+
    This parameter is reserved for internal Microsoft use.

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - Exchange Online
  - Exchange Online Protection
  parameterValueGroup: ""
- type: <xref href="Boolean" data-throw-if-not-resolved="False" />
  name: Enabled
  description: |+
    The Enabled parameter specifies whether the policy is enabled. Valid values are:

    - $true: The policy is enabled. This is the default value.
    - $false: The policy is disabled.

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - Exchange Online
  - Security & Compliance
  - Exchange Online Protection
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: Force
  description: |+
    The Force switch hides warning or confirmation messages. You don't need to specify a value with this switch.

    You can use this switch to run tasks programmatically where prompting for administrative input is inappropriate.

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - Exchange Online
  - Exchange Online Protection
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: Name
  isRequired: true
  description: |+
    The Name parameter specifies the name for the SecOps mailbox override policy. Regardless of the value you specify, the name will be SecOpsOverridePolicy.

  defaultValue: None
  position: "0"
  aliases: ""
  applicable:
  - Exchange Online
  - Security & Compliance
  - Exchange Online Protection
  parameterValueGroup: ""
- type: <xref href="MultiValuedProperty" data-throw-if-not-resolved="False" />
  name: SentTo
  isRequired: true
  description: |+
    The SentTo parameter specifies the email address of the SecOps mailbox. Groups are not allowed.

    You can specify multiple email addresses separated by commas.

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - Exchange Online
  - Security & Compliance
  - Exchange Online Protection
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: WhatIf
  description: |+
    The WhatIf switch doesn't work in Security & Compliance PowerShell.

  defaultValue: None
  position: Named
  aliases: wi
  applicable:
  - Exchange Online
  - Security & Compliance
  - Exchange Online Protection
  parameterValueGroup: ""
applicable:
- Exchange Online
- Security & Compliance
- Exchange Online Protection
uid: ExchangePowerShell.New-SecOpsOverridePolicy
name: New-SecOpsOverridePolicy
description: |-
  You need to be assigned permissions before you can run this cmdlet. Although this topic lists all parameters for the cmdlet, you may not have access to some parameters if they're not included in the permissions assigned to you. To find the permissions required to run any cmdlet or parameter in your organization, see [Find the permissions required to run any Exchange cmdlet](https://learn.microsoft.com/powershell/exchange/find-exchange-cmdlet-permissions).
metadata:
  external help file: Microsoft.Exchange.TransportMailflow-Help.xml
  online version: https://learn.microsoft.com/powershell/module/exchange/new-secopsoverridepolicy
  applicable: Exchange Online, Security & Compliance, Exchange Online Protection
  title: New-SecOpsOverridePolicy
  schema: 2.0.0
  author: chrisda
  ms.author: chrisda
  ms.reviewer: ""
