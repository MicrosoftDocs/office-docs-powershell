### YamlMime:PowershellCmdlet
summary: |-
  This cmdlet is available only in Security & Compliance PowerShell. For more information, see [Security & Compliance PowerShell](https://learn.microsoft.com/powershell/exchange/scc-powershell).

  Use the Set-DlpKeywordDictionary cmdlet to modify data loss prevention (DLP) keyword dictionaries in the Microsoft Purview compliance portal.

  For information about the parameter sets in the Syntax section below, see [Exchange cmdlet syntax](https://learn.microsoft.com/powershell/exchange/exchange-cmdlet-syntax).
module: ExchangePowerShell
notes: ""
syntaxes:
- >-
  Set-DlpKeywordDictionary [-Identity] <SensitiveInformationTypeIdParameter>

   [-Confirm]

   [-Description <String>]

   [-DoNotPersistKeywords]

   [-FileData <Byte[]>]

   [-Name <String>]

   [-WhatIf]

   [<CommonParameters>]
examples:
- title: Example 1
  code: |-
    $Keywords = "Aarskog's syndrome, Abandonment, Abasia, Abderhalden-Kaufmann-Lignac, Abdominalgia, Abduction contracture, Abetalipo proteinemia, Abiotrophy, Ablatio, ablation, Ablepharia, Abocclusion, Abolition, Aborter, Abortion, Abortus, Aboulomania, Abrami's disease, Abramo"

    $EncodedKeywords = [System.Text.Encoding]::Unicode.GetBytes($keywords)

    Set-DlpKeywordDictionary -Identity "Diseases" -FileData $EncodedKeywords
  description: |-
    This example replaces the existing terms in the DLP keyword dictionary named Diseases with the specified values.
  summary: ""
- title: Example 2
  code: |-
    $Dictionary = Get-DlpKeywordDictionary -Name "Diseases"

    $Terms = $Dictionary.KeywordDictionary.split(',').trim()

    $Terms += "Achylia","Acidemia","Acidocytopenia","Acidocytosis","Acidopenia","Acidosis","Aciduria","Acladiosis","Aclasis"

    $Keywords = $Terms -Join ", "

    $EncodedKeywords = [System.Text.Encoding]::Unicode.GetBytes($Keywords)

    Set-DlpKeywordDictionary -Identity "Diseases" -FileData $EncodedKeywords
  description: |-
    This example adds the specified terms to the DLP keyword dictionary named Diseases without affecting other existing terms.
  summary: ""
- title: Example 3
  code: |-
    $Dictionary = Get-DlpKeywordDictionary -Name "Diseases"

    $Terms = $Dictionary.KeywordDictionary.split(',').trim()

    $TermsToRemove = @('abandonment', 'ablatio')

    $UpdatedTerms = $Terms | Where-Object {$_ -NotIn $TermsToRemove}

    $Keywords = $UpdatedTerms -Join ", "

    $EncodedKeywords = [System.Text.Encoding]::Unicode.GetBytes($Keywords)

    Set-DlpKeywordDictionary -Identity "Diseases" -FileData $EncodedKeywords
  description: |-
    This example removes the specified terms from the DLP keyword dictionary named Diseases without affecting other existing terms.
  summary: ""
- title: Example 4
  code: |-
    $Dictionary = Get-DlpKeywordDictionary -Name "Inappropriate Language"

    $Terms = $Dictionary.KeywordDictionary.split(',').trim()

    Set-Content $Terms -Path "C:\My Documents\InappropriateTerms.txt"

    $UpdatedTerms = Get-Content -Path "C:\My Documents\InappropriateTerms.txt"

    $Keywords = $UpdatedTerms -Join ", "

    $EncodedKeywords = [System.Text.Encoding]::Unicode.GetBytes($Keywords)

    Set-DlpKeywordDictionary -Identity "Inappropriate Language" -FileData $EncodedKeywords
  description: |-
    The first three commands export the terms from the existing keyword dictionary named Inappropriate Language to the file C:\\My Documents\\InappropriateTerms.txt, where each term is on a separate line.

    After you use Notepad to modify the terms and save the file, the last four commands use the file to replace the terms in the keyword dictionary.
  summary: ""
parameters:
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: Confirm
  description: |+
    The Confirm switch specifies whether to show or hide the confirmation prompt. How this switch affects the cmdlet depends on if the cmdlet requires confirmation before proceeding.

    - Destructive cmdlets (for example, Remove-\* cmdlets) have a built-in pause that forces you to acknowledge the command before proceeding. For these cmdlets, you can skip the confirmation prompt by using this exact syntax: `-Confirm:$false`.
    - Most other cmdlets (for example, New-\* and Set-\* cmdlets) don't have a built-in pause. For these cmdlets, specifying the Confirm switch without a value introduces a pause that forces you acknowledge the command before proceeding.

  defaultValue: None
  position: Named
  aliases: cf
  applicable:
  - Security & Compliance
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: Description
  description: |+
    The Description parameter specifies descriptive text for the DLP keyword dictionary. If the value contains spaces, enclose the value in quotation marks.

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - Security & Compliance
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: DoNotPersistKeywords
  description: |+
    {{ Fill DoNotPersistKeywords Description }}

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - Security & Compliance
  parameterValueGroup: ""
- type: <xref href="Byte" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: FileData
  description: |+
    The FileData parameter specifies the terms that are used in the DLP keyword dictionary. This parameter requires a comma-separated list of values that's binary encoded in UTF-16. For more information, see the examples in this topic.

    The maximum file size is up to 1 MB of terms after compression. The organization limit for all dictionaries is also 1 MB after compression.

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - Security & Compliance
  parameterValueGroup: ""
- type: <xref href="SensitiveInformationTypeIdParameter" data-throw-if-not-resolved="False" />
  name: Identity
  isRequired: true
  description: |+
    The Identity parameter specifies the name of the DLP keyword dictionary that you want to modify. If the value contains spaces, enclose the value in quotation marks.

  defaultValue: None
  pipelineInput: true
  position: "1"
  aliases: ""
  applicable:
  - Security & Compliance
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: Name
  description: |+
    The Name parameter specifies a unique name for the DLP keyword dictionary. If the value contains spaces, enclose the value in quotation marks.

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - Security & Compliance
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: WhatIf
  description: |+
    The WhatIf switch doesn't work in Security & Compliance PowerShell.

  defaultValue: None
  position: Named
  aliases: wi
  applicable:
  - Security & Compliance
  parameterValueGroup: ""
applicable:
- Security & Compliance
uid: ExchangePowerShell.Set-DlpKeywordDictionary
name: Set-DlpKeywordDictionary
description: |-
  To use this cmdlet in Security & Compliance PowerShell, you need to be assigned permissions. For more information, see [Permissions in the Microsoft Purview compliance portal](https://learn.microsoft.com/purview/microsoft-365-compliance-center-permissions).
metadata:
  external help file: Microsoft.Exchange.TransportMailflow-Help.xml
  online version: https://learn.microsoft.com/powershell/module/exchange/set-dlpkeyworddictionary
  applicable: Security & Compliance
  title: Set-DlpKeywordDictionary
  schema: 2.0.0
  author: chrisda
  ms.author: chrisda
  ms.reviewer: ""
