### YamlMime:PowershellCmdlet
summary: |-
  This cmdlet is available only in Security & Compliance PowerShell. For more information, see [Security & Compliance PowerShell](https://learn.microsoft.com/powershell/exchange/scc-powershell).

  Use the New-DeviceTenantPolicy cmdlet to create your organization's mobile device tenant policy in Basic Mobility and Security in Microsoft 365.

  For information about the parameter sets in the Syntax section below, see [Exchange cmdlet syntax](https://learn.microsoft.com/powershell/exchange/exchange-cmdlet-syntax).
module: ExchangePowerShell
notes: ""
syntaxes:
- >-
  New-DeviceTenantPolicy [-Comment <String>]

   [-Confirm]

   [-Enabled <Boolean>]

   [-Force]

   [-WhatIf]

   [<CommonParameters>]
examples:
- title: Example 1
  code: |-
    New-DeviceTenantPolicy
  description: |-
    This example creates your organization's mobile device tenant policy. You can have only one mobile device tenant policy in your organization.
  summary: ""
parameters:
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: Comment
  description: |+
    The Comment parameter specifies an optional comment. If you specify a value that contains spaces, enclose the value in quotation marks ("), for example: "This is an admin note".

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - Security & Compliance
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: Confirm
  description: |+
    The Confirm switch specifies whether to show or hide the confirmation prompt. How this switch affects the cmdlet depends on if the cmdlet requires confirmation before proceeding.

    - Destructive cmdlets (for example, Remove-\* cmdlets) have a built-in pause that forces you to acknowledge the command before proceeding. For these cmdlets, you can skip the confirmation prompt by using this exact syntax: `-Confirm:$false`.
    - Most other cmdlets (for example, New-\* and Set-\* cmdlets) don't have a built-in pause. For these cmdlets, specifying the Confirm switch without a value introduces a pause that forces you acknowledge the command before proceeding.

  defaultValue: None
  position: Named
  aliases: cf
  applicable:
  - Security & Compliance
  parameterValueGroup: ""
- type: <xref href="Boolean" data-throw-if-not-resolved="False" />
  name: Enabled
  description: |+
    The Enabled parameter specifies whether the policy is enabled. Valid values are:

    - $true: The policy is enabled. This is the default value.
    - $false: The policy is disabled.

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - Security & Compliance
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: Force
  description: |+
    The Force switch hides warning or confirmation messages. You don't need to specify a value with this switch.

    You can use this switch to run tasks programmatically where prompting for administrative input is inappropriate.

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - Security & Compliance
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: WhatIf
  description: |+
    The WhatIf switch doesn't work in Security & Compliance PowerShell.

  defaultValue: None
  position: Named
  aliases: wi
  applicable:
  - Security & Compliance
  parameterValueGroup: ""
applicable:
- Security & Compliance
uid: ExchangePowerShell.New-DeviceTenantPolicy
name: New-DeviceTenantPolicy
description: |-
  The cmdlets in Basic Mobility and Security are described in the following list:

  - DeviceTenantPolicy and DeviceTenantRule cmdlets: A policy that defines whether to block or allow mobile device access to Exchange Online email by unsupported devices that use Exchange ActiveSync only. This setting applies to all users in your organization. Both allow and block scenarios allow reporting for unsupported devices, and you can specify exceptions to the policy based on security groups.
  - DeviceConditionalAccessPolicy and DeviceConditionalAccessRule cmdlets: Policies that control mobile device access to Microsoft 365 for supported devices. These policies are applied to security groups. Unsupported devices are not allowed to enroll in Basic Mobility and Security.
  - DeviceConfigurationPolicy and DeviceConfigurationRule cmdlets: Policies that control mobile device settings for supported devices. These policies are applied to security groups.
  - Get-DevicePolicy: Returns all Basic Mobility and Security policies regardless of type (DeviceTenantPolicy, DeviceConditionalAccessPolicy or DeviceConfigurationPolicy).

  For more information about Basic Mobility and Security, see [Overview of Basic Mobility and Security for Microsoft 365](https://learn.microsoft.com/microsoft-365/admin/basic-mobility-security/overview).

  To use this cmdlet in Security & Compliance PowerShell, you need to be assigned permissions. For more information, see [Permissions in the Microsoft Defender portal](https://learn.microsoft.com/microsoft-365/security/office-365-security/mdo-portal-permissions) or [Permissions in the Microsoft Purview compliance portal](https://learn.microsoft.com/purview/microsoft-365-compliance-center-permissions).
metadata:
  external help file: Microsoft.Exchange.TransportMailflow-Help.xml
  online version: https://learn.microsoft.com/powershell/module/exchange/new-devicetenantpolicy
  applicable: Security & Compliance
  title: New-DeviceTenantPolicy
  schema: 2.0.0
  author: chrisda
  ms.author: chrisda
  ms.reviewer: ""
