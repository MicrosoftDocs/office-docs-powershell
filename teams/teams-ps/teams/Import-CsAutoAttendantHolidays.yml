### YamlMime:PowershellCmdlet
summary: |-
  Use Import-CsAutoAttendantHolidays cmdlet to import holiday schedules of an existing Auto Attendant (AA) that were previously exported using the Export-CsAutoAttendantHolidays cmdlet.
module: MicrosoftTeamsPowerShell
notes: ""
inputs:
- name: <xref href="System.String" data-throw-if-not-resolved="False" />
  description: |-
    The Import-CsAutoAttendantHolidays cmdlet accepts a string as the Identity parameter.
outputs:
- name: <xref href="Microsoft.Rtc.Management.Hosted.OAA.Models.HolidayImportResult" data-throw-if-not-resolved="False" />
  description: ""
links:
- text: Export-CsAutoAttendantHolidays
  href: Export-CsAutoAttendantHolidays.yml
- text: Get-CsAutoAttendantHolidays
  href: Get-CsAutoAttendantHolidays.yml
syntaxes:
- Import-CsAutoAttendantHolidays -Identity <String> -Input <byte[]> [-Tenant <Guid>] [<CommonParameters>]
examples:
- title: '-------------------------- Example 1 --------------------------'
  code: |-
    $bytes = [System.IO.File]::ReadAllBytes("C:\Imports\Holidays.csv")
    Import-CsAutoAttendantHolidays -Identity 6abea1cd-904b-520b-be96-1092cc096432 -Input $bytes
  description: |-
    In this example, the Import-CsAutoAttendantHolidays cmdlet is used to import holiday schedule information from a file at path "C:\Imports\Holidays.csv" to an auto attendant with Identity of 6abea1cd-904b-520b-be96-1092cc096432.
  summary: ""
- title: '-------------------------- Example 2 --------------------------'
  code: |-
    $bytes = [System.IO.File]::ReadAllBytes("C:\Imports\Holidays.csv")
    Import-CsAutoAttendantHolidays -Identity 6abea1cd-904b-520b-be96-1092cc096432 -Input $bytes | Format-Table -Wrap -AutoSize
  description: |-
    In this example, the Import-CsAutoAttendantHolidays cmdlet is used to import holiday schedule information from a file at path "C:\Imports\Holidays.csv" to an auto attendant with Identity of 6abea1cd-904b-520b-be96-1092cc096432. The result of the import process is formatted as a table.
  summary: ""
parameters:
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: Identity
  isRequired: true
  description: |+
    The identity for the AA whose holiday schedules are to be imported.

  defaultValue: None
  pipelineInput: true
  position: "0"
  aliases: ""
  applicable:
  - Microsoft Teams
  parameterValueGroup: ""
- type: <xref href="System.Byte" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: Input
  isRequired: true
  description: |+
    The Input parameter specifies the holiday schedule information that is to be imported.

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - Microsoft Teams
  parameterValueGroup: ""
- type: <xref href="System.Guid" data-throw-if-not-resolved="False" />
  name: Tenant
  description: ""
  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - Microsoft Teams
  parameterValueGroup: ""
applicable:
- Microsoft Teams
uid: MicrosoftTeamsPowerShell.Import-CsAutoAttendantHolidays
name: Import-CsAutoAttendantHolidays
description: |-
  The Export-CsAutoAttendantHolidays cmdlet and the Import-CsAutoAttendantHolidays cmdlet enable you to export holiday schedules in your auto attendant and then later import that information. This can be extremely useful in a situation where you need to configure same holiday sets in multiple auto attendants.

  The Export-CsAutoAttendantHolidays cmdlet returns the holiday schedule information in serialized form (as a byte array). The caller can then write the bytes to the disk to obtain a CSV file. Similarly, the Import-CsAutoAttendantHolidays cmdlet accepts the holiday schedule information as a byte array, which can be read from the aforementioned CSV file. The first line of the CSV file is considered a header record and is always ignored.

  **NOTES**:

  Each line in the CSV file used by Export-CsAutoAttendantHolidays and Import-CsAutoAttendantHolidays cmdlet should be of the following format:

     `HolidayName,StartDateTime1,EndDateTime1,StartDateTime2,EndDateTime2,...,StartDateTime10,EndDateTime10`

  where

  - HolidayName is the name of the holiday to be imported.
  - StartDateTimeX and EndDateTimeX specify a date/time range for the holiday and are optional. If no date-time ranges are defined, then the holiday is imported without any date/time ranges. They follow the same format as New-CsOnlineDateTimeRange cmdlet.
  - EndDateTimeX is optional. If it is not specified, the end bound of the date time range is set to 00:00 of the day after the start date.

  - The first line of the CSV file is considered a header record and is always ignored by Import-CsAutoAttendantHolidays cmdlet.
  - If the destination auto attendant for the import already contains a call flow or schedule by the same name as one of the holidays being imported, the corresponding CSV record is skipped.
  - For holidays that are successfully imported, a default call flow is created which is configured without any greeting and simply disconnects the call on being executed.
metadata:
  external help file: Microsoft.Rtc.Management.Hosted.dll-help.xml
  online version: https://learn.microsoft.com/powershell/module/teams/import-csautoattendantholidays
  applicable: Microsoft Teams
  title: Import-CsAutoAttendantHolidays
  schema: 2.0.0
  manager: bulenteg
  author: tomkau
  ms.author: tomkau
  ms.reviewer: williamlooney
