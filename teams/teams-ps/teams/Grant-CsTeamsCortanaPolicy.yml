### YamlMime:PowershellCmdlet
summary: |-
  The CsTeamsCortanaPolicy cmdlets enable administrators to control settings for Cortana voice assistant in Microsoft Teams.
module: MicrosoftTeamsPowerShell
notes: ""
inputs:
- name: <xref href="Microsoft.Rtc.Management.AD.UserIdParameter" data-throw-if-not-resolved="False" />
  description: ""
outputs:
- name: <xref href="System.Object" data-throw-if-not-resolved="False" />
  description: ""
syntaxes:
- >-
  Grant-CsTeamsCortanaPolicy [[-Identity] <UserIdParameter>] [-PolicyName] <String> [-Tenant <System.Guid>]

   [-DomainController <Fqdn>] [-PassThru] [-WhatIf] [-Confirm] [<CommonParameters>]
- >-
  Grant-CsTeamsCortanaPolicy [-PolicyName] <String> [-Tenant <System.Guid>] [-DomainController <Fqdn>]

   [-PassThru] [-Global] [-WhatIf] [-Confirm] [<CommonParameters>]
- >-
  Grant-CsTeamsCortanaPolicy [-PassThru] [[-PolicyName] <String>] [-MsftInternalProcessingMode <String>]

   -Group <String> [-Rank <Int32>] [-WhatIf] [-Confirm] [<CommonParameters>]
examples:
- title: Example 1
  code: |-
    PS C:\> Grant-CsTeamsCortanaPolicy -identity "Ken Myer" -PolicyName MyCortanaPolicy
  description: |-
    In this example, a user with identity "Ken Myer" is being assigned the MyCortanaPolicy
  summary: ""
parameters:
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: Confirm
  description: |+
    Prompts you for confirmation before running the cmdlet.

  defaultValue: None
  position: Named
  aliases: cf
  parameterValueGroup: ""
- type: <xref href="Fqdn" data-throw-if-not-resolved="False" />
  name: DomainController
  description: ""
  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: Global
  description: ""
  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: Group
  isRequired: true
  description: |+
    Specifies the group used for the group policy assignment.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="UserIdParameter" data-throw-if-not-resolved="False" />
  name: Identity
  description: |+
    Indicates the identity of the user account the policy should be assigned to. User identities can be specified using one of four formats: 1) the user's SIP address; 2) the user principal name (UPN); 3) the user's domain name and logon name, in the form domain\logon (for example, litwareinc\kenmyer); and, 4) the user's Active Directory display name (for example, Ken Myer). User Identities can also be referenced by using the user's Active Directory distinguished name.

  defaultValue: None
  pipelineInput: true
  position: "0"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: PassThru
  description: ""
  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: PolicyName
  isRequired: true
  description: |+
    The name of the custom policy that is being assigned to the user. To remove a specific assignment and fall back to the default tenant policy, you can assign to $Null.

  defaultValue: None
  position: "1"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Int32" data-throw-if-not-resolved="False" />
  name: Rank
  description: |+
    The rank of the policy assignment, relative to other group policy assignments for the same policy type.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Guid" data-throw-if-not-resolved="False" />
  name: Tenant
  description: |+
    Globally unique identifier (GUID) of the tenant account whose external user communication policy are being created. For example:
    -Tenant "38aad667-af54-4397-aaa7-e94c79ec2308"
    You can return your tenant ID by running this command:
    Get-CsTenant | Select-Object DisplayName, TenantID

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: WhatIf
  description: |+
    Shows what would happen if the cmdlet runs.
    The cmdlet is not run.

  defaultValue: None
  position: Named
  aliases: wi
  parameterValueGroup: ""
applicable:
- Microsoft Teams
uid: MicrosoftTeamsPowerShell.Grant-CsTeamsCortanaPolicy
name: Grant-CsTeamsCortanaPolicy
description: |-
  The CsTeamsCortanaPolicy cmdlets enable administrators to control settings for Cortana voice assistant in Microsoft Teams. Specifically, these specify if a user can use Cortana voice assistant in Microsoft Teams and Cortana invocation behavior via CortanaVoiceInvocationMode parameter -
  * Disabled - Cortana voice assistant is disabled
  * PushToTalkUserOverride - Cortana voice assistant is enabled but without wake-word ("Hey Cortana") invocation
  * WakeWordPushToTalkUserOverride - Cortana voice assistant is enabled with wake-word ("Hey Cortana") invocation on devices where wake-word is supported

  This cmdlet lets you assign a Teams Cortana policy at the per-user scope.
metadata:
  external help file: Microsoft.Rtc.Management.Hosted.dll-help.xml
  online version: https://learn.microsoft.com/powershell/module/teams/get-csteamscortanapolicy
  applicable: Microsoft Teams
  title: Grant-CsTeamsCortanaPolicy
  schema: 2.0.0
  manager: amehta
  author: akshbhat-msft
  ms.author: serdars
  ms.reviewer: ""
