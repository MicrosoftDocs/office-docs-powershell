### YamlMime:PowershellCmdlet
summary: |-
  **NOTE**: The existence of this cmdlet is being documented for completeness, but do not use this cmdlet. We require that all creation and modification of app setup polices (not including the assignment or removal of policies from users) happens in the Microsoft Teams & Skype for Business Admin Center to ensure that the policy matches your expectations for the end user experience.

  As an admin, you can use app setup policies to customize Microsoft Teams to highlight the apps that are most important for your users. You choose the apps to pin and set the order that they appear. App setup policies let you showcase apps that users in your organization need, including ones built by third parties or by developers in your organization. You can also use app setup policies to manage how built-in features appear.

  Apps are pinned to the app bar. This is the bar on the side of the Teams desktop client and at the bottom of the Teams mobile clients (iOS and Android).  Learn more about the App Setup Policies: <https://learn.microsoft.com/MicrosoftTeams/teams-app-setup-policies>.
module: MicrosoftTeamsPowerShell
notes: ""
inputs:
- name: <xref href="Microsoft.Teams.Policy.Administration.Cmdlets.Core.AppPreset" data-throw-if-not-resolved="False" />
  description: ""
- name: <xref href="Microsoft.Teams.Policy.Administration.Cmdlets.Core.PinnedApp" data-throw-if-not-resolved="False" />
  description: ""
- name: <xref href="Microsoft.Teams.Policy.Administration.Cmdlets.Core.PinnedMessageBarApp" data-throw-if-not-resolved="False" />
  description: ""
outputs:
- name: <xref href="System.Object" data-throw-if-not-resolved="False" />
  description: ""
syntaxes:
- >-
  Set-CsTeamsAppSetupPolicy [-Tenant <System.Guid>] [-PinnedAppBarApps <>] [-Description <String>]

   [[-Identity] <XdsIdentity>] [-Force] [-WhatIf] [-Confirm] [<CommonParameters>]
- >-
  Set-CsTeamsAppSetupPolicy [-Tenant <System.Guid>] [-PinnedAppBarApps <>] [-Description <String>]

   [-Instance <PSObject>] [-Force] [-WhatIf] [-Confirm] [<CommonParameters>]
examples:
- title: Example 1
  code: |-
    # Create new teams app setup policy named "Set-Test".
    New-CsTeamsAppSetupPolicy -Identity 'Set-Test'
    Set-CsTeamsAppSetupPolicy -Identity 'Set-Test' -AllowUserPinning $true -AllowSideLoading $false
  description: |-
    Step 1: Create a new Teams app setup policy named "Set-Test".
    Step 2: Set AllowUserPinning as true, AllowSideLoading as false.
  summary: ""
- title: Example 2
  code: |-
    New-CsTeamsAppSetupPolicy -Identity 'Set-Test'
    $ActivityApp = New-Object -TypeName Microsoft.Teams.Policy.Administration.Cmdlets.Core.PinnedApp -Property @{Id="14d6962d-6eeb-4f48-8890-de55454bb136"}
    $ChatApp = New-Object -TypeName Microsoft.Teams.Policy.Administration.Cmdlets.Core.PinnedApp -Property @{Id="86fcd49b-61a2-4701-b771-54728cd291fb"}
    $TeamsApp = New-Object -TypeName Microsoft.Teams.Policy.Administration.Cmdlets.Core.PinnedApp -Property @{Id="2a84919f-59d8-4441-a975-2a8c2643b741"}
    $PinnedAppBarApps = @($ActivityApp,$ChatApp,$TeamsApp)
    Set-CsTeamsAppSetupPolicy -Identity 'Set-Test' -PinnedAppBarApps $PinnedAppBarApps
  description: |-
    Step 1: Create new teams app setup policy named "Set-Test".
    Step 2: Set ActivityApp, ChatApp, TeamsApp as PinnedAppBarApps.
    Step 3: Settings to pin these apps to the app bar in Teams client.
  summary: ""
- title: Example 3
  code: |-
    New-CsTeamsAppSetupPolicy -Identity 'Set-Test'
    $VivaConnectionsApp = New-Object -TypeName Microsoft.Teams.Policy.Administration.Cmdlets.Core.PinnedMessageBarApp -Property @{Id="d2c6f111-ffad-42a0-b65e-ee00425598aa"}
    $PinnedMessageBarApps = @($VivaConnectionsApp)
    Set-CsTeamsAppSetupPolicy -Identity 'Set-Test' -PinnedMessageBarApps $PinnedMessageBarApps
  description: |-
    Step 1: Create new teams app setup policy named "Set-Test".
    Step 2: Set VivaConnectionsApp as PinnedAppBarApps.
    Step 3: Settings to pin these apps to the messaging extension in Teams client.
  summary: ""
- title: Example 4
  code: |-
    New-CsTeamsAppSetupPolicy -Identity 'Set-Test'
    $VivaConnectionsApp = New-Object -TypeName  Microsoft.Teams.Policy.Administration.Cmdlets.Core.AppPreset -Property @{Id="d2c6f111-ffad-42a0-b65e-ee00425598aa"}
    $AppPresetList = @($VivaConnectionsApp)
    Set-CsTeamsAppSetupPolicy -Identity 'Set-Test' -AppPresetList $AppPresetList
  description: |-
    Step 1: Create new teams app setup policy named "Set-Test".
    Step 2: Set VivaConnectionsApp as AppPresetList
    Step 3: Settings to install these apps in your users' personal Teams environment.
  summary: ""
parameters:
- type: <xref href="Boolean" data-throw-if-not-resolved="False" />
  name: AllowSideLoading
  description: |+
    This is also known as side loading. This setting determines if a user can upload a custom app package in the Teams app. Turning it on lets you create or develop a custom app to be used personally or across your organization without having to submit it to the Teams app store. Uploading a custom app also lets you test an app before you distribute it more widely by only assigning it to a single user or group of users.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Boolean" data-throw-if-not-resolved="False" />
  name: AllowUserPinning
  description: |+
    If you turn this on, the user's existing app pins will be added to the list of pinned apps set in this policy. Users can rearrange, add, and remove pins as they choose. If you turn this off, the user's existing app pins will be removed and replaced with the apps defined in this policy.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Microsoft.Teams.Policy.Administration.Cmdlets.Core.AppPreset" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: AppPresetList
  description: |+
    Choose which apps and messaging extensions you want to be installed in your users' personal Teams environment and in meetings they create. Users can install other available apps from the Teams app store. 

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: Confirm
  description: |+
    Prompts you for confirmation before running the cmdlet.

  defaultValue: None
  position: Named
  aliases: cf
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: Description
  description: |+
    Description of App setup policy.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: Force
  description: |+
    Do not use.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="XdsIdentity" data-throw-if-not-resolved="False" />
  name: Identity
  description: |+
    Name of app setup policy. If empty, all identities will be used by default.

  defaultValue: None
  position: "1"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="PSObject" data-throw-if-not-resolved="False" />
  name: Instance
  description: |+
    Do not use. 

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Microsoft.Teams.Policy.Administration.Cmdlets.Core.PinnedApp" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: PinnedAppBarApps
  description: |+
    Pinning an app displays the app in the app bar in Teams client. Admins can pin apps and they can allow users to pin apps. Pinning is used to highlight apps that users need the most and promote ease of access.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Microsoft.Teams.Policy.Administration.Cmdlets.Core.PinnedMessageBarApp" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: PinnedMessageBarApps
  description: |+
    Apps will be pinned in messaging extensions and into the ellipsis menu.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Guid" data-throw-if-not-resolved="False" />
  name: Tenant
  description: |+
    Do not use.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: WhatIf
  description: |+
    Shows what would happen if the cmdlet runs.
    The cmdlet is not run.

  defaultValue: None
  position: Named
  aliases: wi
  parameterValueGroup: ""
applicable:
- Microsoft Teams
uid: MicrosoftTeamsPowerShell.Set-CsTeamsAppSetupPolicy
name: Set-CsTeamsAppSetupPolicy
description: |-
  **NOTE**: The existence of this cmdlet is being documented for completeness, but do not use this cmdlet. We require that all creation and modification of app setup polices (not including the assignment or removal of policies from users) happens in the Microsoft Teams & Skype for Business Admin Center to ensure that the policy matches your expectations for the end user experience.

  As an admin, you can use app setup policies to customize Microsoft Teams to highlight the apps that are most important for your users. You choose the apps to pin and set the order that they appear. App setup policies let you showcase apps that users in your organization need, including ones built by third parties or by developers in your organization. You can also use app setup policies to manage how built-in features appear.

  Apps are pinned to the app bar. This is the bar on the side of the Teams desktop client and at the bottom of the Teams mobile clients (iOS and Android).  Learn more about the App Setup Policies: <https://learn.microsoft.com/MicrosoftTeams/teams-app-setup-policies>.
metadata:
  external help file: Microsoft.Rtc.Management.dll-help.xml
  online version: https://learn.microsoft.com/powershell/module/teams/set-csteamsappsetuppolicy
  applicable: Microsoft Teams
  title: Set-CsTeamsAppSetupPolicy
  schema: 2.0.0
  manager: bulenteg
  author: tomkau
  ms.author: tomkau
  ms.reviewer: williamlooney
